<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="xn.pigfarm.mapper.production.DeliveryMapper">

	<resultMap id="DeliveryResult"  type="DeliveryModel" >
		<result property="rowId" column="ROW_ID" jdbcType="INTEGER" />
		<result property="sortNbr" column="SORT_NBR" jdbcType="INTEGER" />
		<result property="status" column="STATUS" jdbcType="CHAR" />
		<result property="deletedFlag" column="DELETED_FLAG" jdbcType="CHAR" />
		<result property="originFlag" column="ORIGIN_FLAG" jdbcType="CHAR" />
		<result property="originApp" column="ORIGIN_APP" jdbcType="VARCHAR" />
		<result property="notes" column="NOTES" jdbcType="VARCHAR" />
		<result property="farmId" column="FARM_ID" jdbcType="INTEGER" />
		<result property="companyId" column="COMPANY_ID" jdbcType="INTEGER" />
		<result property="lineNumber" column="LINE_NUMBER" jdbcType="INTEGER" />
		<result property="worker" column="WORKER" jdbcType="INTEGER" />
		<result property="createId" column="CREATE_ID" jdbcType="INTEGER" />
		<result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP" />
		<result property="proNo" column="PRO_NO" jdbcType="INTEGER" />
		<result property="swineryId" column="SWINERY_ID" jdbcType="INTEGER" />
		<result property="pigId" column="PIG_ID" jdbcType="INTEGER" />
		<result property="lineId" column="LINE_ID" jdbcType="INTEGER" />
		<result property="houseId" column="HOUSE_ID" jdbcType="INTEGER" />
		<result property="pigpenId" column="PIGPEN_ID" jdbcType="INTEGER" />
		<result property="billId" column="BILL_ID" jdbcType="INTEGER" />
		<result property="parity" column="PARITY" jdbcType="INTEGER" />
		<result property="dayAge" column="DAY_AGE" jdbcType="INTEGER" />
		<result property="lastStatus" column="LAST_STATUS" jdbcType="INTEGER" />
		<result property="labor" column="LABOR" jdbcType="DECIMAL" />
		<result property="aliveLitterWeight" column="ALIVE_LITTER_WEIGHT" jdbcType="DECIMAL" />
		<result property="healthyNum" column="HEALTHY_NUM" jdbcType="INTEGER" />
		<result property="weakNum" column="WEAK_NUM" jdbcType="INTEGER" />
		<result property="stillbirthNum" column="STILLBIRTH_NUM" jdbcType="INTEGER" />
		<result property="mutantNum" column="MUTANT_NUM" jdbcType="INTEGER" />
		<result property="mummyNum" column="MUMMY_NUM" jdbcType="INTEGER" />
		<result property="blackNum" column="BLACK_NUM" jdbcType="INTEGER" />
		<result property="aliveLitterY" column="ALIVE_LITTER_Y" jdbcType="INTEGER" />
		<result property="aliveLitterX" column="ALIVE_LITTER_X" jdbcType="INTEGER" />
		<result property="houseNum" column="HOUSE_NUM" jdbcType="VARCHAR" />
		<result property="deliveryType" column="DELIVERY_TYPE" jdbcType="VARCHAR" />
		<result property="deliveryDate" column="DELIVERY_DATE" jdbcType="TIMESTAMP" />
		<result property="porkSwineryId" column="PORK_SWINERY_ID" jdbcType="INTEGER" />
		<result property="performanceHouseId" column="PERFORMANCE_HOUSE_ID" jdbcType="INTEGER" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="DeliveryModel_Column_List">
		ROW_ID,SORT_NBR,NOTES,LINE_NUMBER,WORKER,CREATE_ID,CREATE_DATE,PRO_NO,SWINERY_ID,PIG_ID,LINE_ID,HOUSE_ID,PIGPEN_ID,BILL_ID,PARITY,DAY_AGE,LAST_STATUS,LABOR,ALIVE_LITTER_WEIGHT,HEALTHY_NUM,WEAK_NUM,STILLBIRTH_NUM,MUTANT_NUM,MUMMY_NUM,BLACK_NUM,ALIVE_LITTER_Y,ALIVE_LITTER_X,HOUSE_NUM,DELIVERY_TYPE,DELIVERY_DATE,PORK_SWINERY_ID,PERFORMANCE_HOUSE_ID
	</sql>

	<!-- 单条新增 -->
	<insert id="insert" useGeneratedKeys="true"   keyProperty="rowId" parameterType="DeliveryModel">
		INSERT INTO PP_L_BILL_DELIVERY
		<trim prefix="(" suffix=")" suffixOverrides=",">
			SORT_NBR,
			STATUS,
			DELETED_FLAG,
			ORIGIN_FLAG,
			ORIGIN_APP,
			NOTES,
			FARM_ID,
			COMPANY_ID,
			LINE_NUMBER,
			WORKER,
			CREATE_ID,
			CREATE_DATE,
			PRO_NO,
			SWINERY_ID,
			PIG_ID,
			LINE_ID,
			HOUSE_ID,
			PIGPEN_ID,
			BILL_ID,
			PARITY,
			DAY_AGE,
			LAST_STATUS,
			LABOR,
			ALIVE_LITTER_WEIGHT,
			HEALTHY_NUM,
			WEAK_NUM,
			STILLBIRTH_NUM,
			MUTANT_NUM,
			MUMMY_NUM,
			BLACK_NUM,
			ALIVE_LITTER_Y,
			ALIVE_LITTER_X,
			HOUSE_NUM,
			DELIVERY_TYPE,
			DELIVERY_DATE,
			PORK_SWINERY_ID,
			PERFORMANCE_HOUSE_ID
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{ sortNbr,jdbcType=INTEGER},
			#{ status,jdbcType=CHAR},
			#{ deletedFlag,jdbcType=CHAR},
			#{ originFlag,jdbcType=CHAR},
			#{ originApp,jdbcType=VARCHAR},
			#{ notes,jdbcType=VARCHAR},
			#{ farmId,jdbcType=INTEGER},
			#{ companyId,jdbcType=INTEGER},
			#{ lineNumber,jdbcType=INTEGER},
			#{ worker,jdbcType=INTEGER},
			#{ createId,jdbcType=INTEGER},
			#{ createDate,jdbcType=TIMESTAMP},
			#{ proNo,jdbcType=INTEGER},
			#{ swineryId,jdbcType=INTEGER},
			#{ pigId,jdbcType=INTEGER},
			#{ lineId,jdbcType=INTEGER},
			#{ houseId,jdbcType=INTEGER},
			#{ pigpenId,jdbcType=INTEGER},
			#{ billId,jdbcType=INTEGER},
			#{ parity,jdbcType=INTEGER},
			#{ dayAge,jdbcType=INTEGER},
			#{ lastStatus,jdbcType=INTEGER},
			#{ labor,jdbcType=DECIMAL},
			#{ aliveLitterWeight,jdbcType=DECIMAL},
			#{ healthyNum,jdbcType=INTEGER},
			#{ weakNum,jdbcType=INTEGER},
			#{ stillbirthNum,jdbcType=INTEGER},
			#{ mutantNum,jdbcType=INTEGER},
			#{ mummyNum,jdbcType=INTEGER},
			#{ blackNum,jdbcType=INTEGER},
			#{ aliveLitterY,jdbcType=INTEGER},
			#{ aliveLitterX,jdbcType=INTEGER},
			#{ houseNum,jdbcType=VARCHAR},
			#{ deliveryType,jdbcType=VARCHAR},
			#{ deliveryDate,jdbcType=TIMESTAMP},
			#{ porkSwineryId,jdbcType=INTEGER},
			#{ performanceHouseId,jdbcType=INTEGER}
		</trim>
	</insert>
	
	<!-- 批量新增 -->
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO PP_L_BILL_DELIVERY
		<trim prefix="(" suffix=")" suffixOverrides=",">
			SORT_NBR ,
			STATUS ,
			DELETED_FLAG ,
			ORIGIN_FLAG ,
			ORIGIN_APP ,
			NOTES ,
			FARM_ID ,
			COMPANY_ID ,
			LINE_NUMBER ,
			WORKER ,
			CREATE_ID ,
			CREATE_DATE ,
			PRO_NO ,
			SWINERY_ID ,
			PIG_ID ,
			LINE_ID ,
			HOUSE_ID ,
			PIGPEN_ID ,
			BILL_ID ,
			PARITY ,
			DAY_AGE ,
			LAST_STATUS ,
			LABOR ,
			ALIVE_LITTER_WEIGHT ,
			HEALTHY_NUM ,
			WEAK_NUM ,
			STILLBIRTH_NUM ,
			MUTANT_NUM ,
			MUMMY_NUM ,
			BLACK_NUM ,
			ALIVE_LITTER_Y ,
			ALIVE_LITTER_X ,
			HOUSE_NUM ,
			DELIVERY_TYPE ,
			DELIVERY_DATE ,
			PORK_SWINERY_ID ,
			PERFORMANCE_HOUSE_ID 
		</trim>
		VALUES
		<foreach collection="records" item="item" index="index"  separator="," >	
			<trim prefix="(" suffix=")" suffixOverrides=",">		
				#{item.sortNbr,jdbcType=INTEGER},
				#{item.status,jdbcType=CHAR},
				#{item.deletedFlag,jdbcType=CHAR},
				#{item.originFlag,jdbcType=CHAR},
				#{item.originApp,jdbcType=VARCHAR},
				#{item.notes,jdbcType=VARCHAR},
				#{item.farmId,jdbcType=INTEGER},
				#{item.companyId,jdbcType=INTEGER},
				#{item.lineNumber,jdbcType=INTEGER},
				#{item.worker,jdbcType=INTEGER},
				#{item.createId,jdbcType=INTEGER},
				#{item.createDate,jdbcType=TIMESTAMP},
				#{item.proNo,jdbcType=INTEGER},
				#{item.swineryId,jdbcType=INTEGER},
				#{item.pigId,jdbcType=INTEGER},
				#{item.lineId,jdbcType=INTEGER},
				#{item.houseId,jdbcType=INTEGER},
				#{item.pigpenId,jdbcType=INTEGER},
				#{item.billId,jdbcType=INTEGER},
				#{item.parity,jdbcType=INTEGER},
				#{item.dayAge,jdbcType=INTEGER},
				#{item.lastStatus,jdbcType=INTEGER},
				#{item.labor,jdbcType=DECIMAL},
				#{item.aliveLitterWeight,jdbcType=DECIMAL},
				#{item.healthyNum,jdbcType=INTEGER},
				#{item.weakNum,jdbcType=INTEGER},
				#{item.stillbirthNum,jdbcType=INTEGER},
				#{item.mutantNum,jdbcType=INTEGER},
				#{item.mummyNum,jdbcType=INTEGER},
				#{item.blackNum,jdbcType=INTEGER},
				#{item.aliveLitterY,jdbcType=INTEGER},
				#{item.aliveLitterX,jdbcType=INTEGER},
				#{item.houseNum,jdbcType=VARCHAR},
				#{item.deliveryType,jdbcType=VARCHAR},
				#{item.deliveryDate,jdbcType=TIMESTAMP},
				#{item.porkSwineryId,jdbcType=INTEGER},
				#{item.performanceHouseId,jdbcType=INTEGER}
			</trim>
		</foreach>			
	</insert>
	
	<!--单条更新 -->
	<update id="update" parameterType="DeliveryModel" >
		UPDATE PP_L_BILL_DELIVERY 
		<set>
		<if test="sortNbr != null">SORT_NBR = #{ sortNbr,jdbcType=INTEGER},</if>
		<if test="status != null">STATUS = #{ status,jdbcType=CHAR},</if>
		<if test="originFlag != null">ORIGIN_FLAG = #{ originFlag,jdbcType=CHAR},</if>
		<if test="originApp != null">ORIGIN_APP = #{ originApp,jdbcType=VARCHAR},</if>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		<if test="lineNumber != null">LINE_NUMBER = #{ lineNumber,jdbcType=INTEGER},</if>
		<if test="worker != null">WORKER = #{ worker,jdbcType=INTEGER},</if>
		<if test="createId != null">CREATE_ID = #{ createId,jdbcType=INTEGER},</if>
		<if test="createDate != null">CREATE_DATE = #{ createDate,jdbcType=TIMESTAMP},</if>
		<if test="proNo != null">PRO_NO = #{ proNo,jdbcType=INTEGER},</if>
		<if test="swineryId != null">SWINERY_ID = #{ swineryId,jdbcType=INTEGER},</if>
		<if test="pigId != null">PIG_ID = #{ pigId,jdbcType=INTEGER},</if>
		<if test="lineId != null">LINE_ID = #{ lineId,jdbcType=INTEGER},</if>
		<if test="houseId != null">HOUSE_ID = #{ houseId,jdbcType=INTEGER},</if>
		<if test="pigpenId != null">PIGPEN_ID = #{ pigpenId,jdbcType=INTEGER},</if>
		<if test="billId != null">BILL_ID = #{ billId,jdbcType=INTEGER},</if>
		<if test="parity != null">PARITY = #{ parity,jdbcType=INTEGER},</if>
		<if test="dayAge != null">DAY_AGE = #{ dayAge,jdbcType=INTEGER},</if>
		<if test="lastStatus != null">LAST_STATUS = #{ lastStatus,jdbcType=INTEGER},</if>
		<if test="labor != null">LABOR = #{ labor,jdbcType=DECIMAL},</if>
		<if test="aliveLitterWeight != null">ALIVE_LITTER_WEIGHT = #{ aliveLitterWeight,jdbcType=DECIMAL},</if>
		<if test="healthyNum != null">HEALTHY_NUM = #{ healthyNum,jdbcType=INTEGER},</if>
		<if test="weakNum != null">WEAK_NUM = #{ weakNum,jdbcType=INTEGER},</if>
		<if test="stillbirthNum != null">STILLBIRTH_NUM = #{ stillbirthNum,jdbcType=INTEGER},</if>
		<if test="mutantNum != null">MUTANT_NUM = #{ mutantNum,jdbcType=INTEGER},</if>
		<if test="mummyNum != null">MUMMY_NUM = #{ mummyNum,jdbcType=INTEGER},</if>
		<if test="blackNum != null">BLACK_NUM = #{ blackNum,jdbcType=INTEGER},</if>
		<if test="aliveLitterY != null">ALIVE_LITTER_Y = #{ aliveLitterY,jdbcType=INTEGER},</if>
		<if test="aliveLitterX != null">ALIVE_LITTER_X = #{ aliveLitterX,jdbcType=INTEGER},</if>
		<if test="houseNum != null">HOUSE_NUM = #{ houseNum,jdbcType=VARCHAR},</if>
		<if test="deliveryType != null">DELIVERY_TYPE = #{ deliveryType,jdbcType=VARCHAR},</if>
		<if test="deliveryDate != null">DELIVERY_DATE = #{ deliveryDate,jdbcType=TIMESTAMP},</if>
		<if test="porkSwineryId != null">PORK_SWINERY_ID = #{ porkSwineryId,jdbcType=INTEGER},</if>
		<if test="performanceHouseId != null">PERFORMANCE_HOUSE_ID = #{ performanceHouseId,jdbcType=INTEGER}</if>
		</set>
		WHERE
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量更新 -->
	<update id="updates" parameterType="java.util.List">
		<foreach collection="records" item="item" index="index" open="" close="" separator=";">	
			UPDATE PP_L_BILL_DELIVERY 
			<set>
			<if test="item.sortNbr != null">SORT_NBR = #{item.sortNbr,jdbcType=INTEGER},</if>
			<if test="item.status != null">STATUS = #{item.status,jdbcType=CHAR},</if>
			<if test="item.originFlag != null">ORIGIN_FLAG = #{item.originFlag,jdbcType=CHAR},</if>
			<if test="item.originApp != null">ORIGIN_APP = #{item.originApp,jdbcType=VARCHAR},</if>
			<if test="item.notes != null">NOTES = #{item.notes,jdbcType=VARCHAR},</if>
			<if test="item.lineNumber != null">LINE_NUMBER = #{item.lineNumber,jdbcType=INTEGER},</if>
			<if test="item.worker != null">WORKER = #{item.worker,jdbcType=INTEGER},</if>
			<if test="item.createId != null">CREATE_ID = #{item.createId,jdbcType=INTEGER},</if>
			<if test="item.createDate != null">CREATE_DATE = #{item.createDate,jdbcType=TIMESTAMP},</if>
			<if test="item.proNo != null">PRO_NO = #{item.proNo,jdbcType=INTEGER},</if>
			<if test="item.swineryId != null">SWINERY_ID = #{item.swineryId,jdbcType=INTEGER},</if>
			<if test="item.pigId != null">PIG_ID = #{item.pigId,jdbcType=INTEGER},</if>
			<if test="item.lineId != null">LINE_ID = #{item.lineId,jdbcType=INTEGER},</if>
			<if test="item.houseId != null">HOUSE_ID = #{item.houseId,jdbcType=INTEGER},</if>
			<if test="item.pigpenId != null">PIGPEN_ID = #{item.pigpenId,jdbcType=INTEGER},</if>
			<if test="item.billId != null">BILL_ID = #{item.billId,jdbcType=INTEGER},</if>
			<if test="item.parity != null">PARITY = #{item.parity,jdbcType=INTEGER},</if>
			<if test="item.dayAge != null">DAY_AGE = #{item.dayAge,jdbcType=INTEGER},</if>
			<if test="item.lastStatus != null">LAST_STATUS = #{item.lastStatus,jdbcType=INTEGER},</if>
			<if test="item.labor != null">LABOR = #{item.labor,jdbcType=DECIMAL},</if>
			<if test="item.aliveLitterWeight != null">ALIVE_LITTER_WEIGHT = #{item.aliveLitterWeight,jdbcType=DECIMAL},</if>
			<if test="item.healthyNum != null">HEALTHY_NUM = #{item.healthyNum,jdbcType=INTEGER},</if>
			<if test="item.weakNum != null">WEAK_NUM = #{item.weakNum,jdbcType=INTEGER},</if>
			<if test="item.stillbirthNum != null">STILLBIRTH_NUM = #{item.stillbirthNum,jdbcType=INTEGER},</if>
			<if test="item.mutantNum != null">MUTANT_NUM = #{item.mutantNum,jdbcType=INTEGER},</if>
			<if test="item.mummyNum != null">MUMMY_NUM = #{item.mummyNum,jdbcType=INTEGER},</if>
			<if test="item.blackNum != null">BLACK_NUM = #{item.blackNum,jdbcType=INTEGER},</if>
			<if test="item.aliveLitterY != null">ALIVE_LITTER_Y = #{item.aliveLitterY,jdbcType=INTEGER},</if>
			<if test="item.aliveLitterX != null">ALIVE_LITTER_X = #{item.aliveLitterX,jdbcType=INTEGER},</if>
			<if test="item.houseNum != null">HOUSE_NUM = #{item.houseNum,jdbcType=VARCHAR},</if>
			<if test="item.deliveryType != null">DELIVERY_TYPE = #{item.deliveryType,jdbcType=VARCHAR},</if>
			<if test="item.deliveryDate != null">DELIVERY_DATE = #{item.deliveryDate,jdbcType=TIMESTAMP},</if>
			<if test="item.porkSwineryId != null">PORK_SWINERY_ID = #{item.porkSwineryId,jdbcType=INTEGER},</if>
			<if test="item.performanceHouseId != null">PERFORMANCE_HOUSE_ID = #{item.performanceHouseId,jdbcType=INTEGER}</if>
			</set>
			WHERE
			ROW_ID = #{item.rowId,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<!--单条删除 -->
	<update id="delete" >
		UPDATE  PP_L_BILL_DELIVERY
		SET
		DELETED_FLAG =  '1'
		WHERE 
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量删除 -->
	<update id="deletes" >
		<foreach item="item" index="index" collection="ids" open=""  close="" separator=";">
		 UPDATE  PP_L_BILL_DELIVERY
		 SET
		 DELETED_FLAG  =  '1'  WHERE 
		 ROW_ID =#{item}
        </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCon" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  PP_L_BILL_DELIVERY
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' 
		 AND FARM_ID=#{ farmId,jdbcType=INTEGER}
		 AND ${item.RECORD_CON} = #{item.RECORD_VALUES}
		 </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCons" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  PP_L_BILL_DELIVERY
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' ${item}
		</foreach>	
	</update>
	
	<!--查询List记录 -->
	<select id="searchToList" resultMap="DeliveryResult">
		SELECT 
		<include refid="DeliveryModel_Column_List" />
		FROM PP_L_BILL_DELIVERY WHERE DELETED_FLAG='0' 
		AND FARM_ID=#{ farmId,jdbcType=INTEGER}
	</select>
	
	<!--查询根据主键查单条记录 -->
	<select id="searchById" resultMap="DeliveryResult" >
		SELECT 
		<include refid="DeliveryModel_Column_List" />
		FROM PP_L_BILL_DELIVERY WHERE DELETED_FLAG='0'  AND
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</select>
	
	<!--根据条件查询有效数据 --><!-- {condition} -->
	<select id="searchListByCon" resultMap="DeliveryResult" >
		SELECT 
		<include refid="DeliveryModel_Column_List" />
		FROM PP_L_BILL_DELIVERY
		WHERE DELETED_FLAG='0'  ${condition} 
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAllListByCon" resultMap="DeliveryResult" >
		SELECT 
		<include refid="DeliveryModel_Column_List" />
		FROM PP_L_BILL_DELIVERY
		WHERE ${condition}
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAll" resultMap="DeliveryResult" >
		SELECT *
		FROM PP_L_BILL_DELIVERY
		WHERE ${condition}
	</select>
	
	<!-- 直接sql操作 -->
	<select id="operSql" resultMap="DeliveryResult"> ${sql} </select>

</mapper>

