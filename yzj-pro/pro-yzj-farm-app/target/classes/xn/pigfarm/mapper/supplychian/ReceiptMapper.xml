<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="xn.pigfarm.mapper.supplychian.ReceiptMapper">

	<resultMap id="ReceiptResult"  type="ReceiptModel" >
		<result property="rowId" column="ROW_ID" jdbcType="INTEGER" />
		<result property="status" column="STATUS" jdbcType="CHAR" />
		<result property="deletedFlag" column="DELETED_FLAG" jdbcType="CHAR" />
		<result property="notes" column="NOTES" jdbcType="VARCHAR" />
		<result property="farmId" column="FARM_ID" jdbcType="INTEGER" />
		<result property="companyId" column="COMPANY_ID" jdbcType="INTEGER" />
		<result property="billCode" column="BILL_CODE" jdbcType="VARCHAR" />
		<result property="billDate" column="BILL_DATE" jdbcType="DATE" />
		<result property="eventCode" column="EVENT_CODE" jdbcType="VARCHAR" />
		<result property="supplierId" column="SUPPLIER_ID" jdbcType="INTEGER" />
		<result property="receiptBranchId" column="RECEIPT_BRANCH_ID" jdbcType="INTEGER" />
		<result property="receiptFarmId" column="RECEIPT_FARM_ID" jdbcType="INTEGER" />
		<result property="inputerId" column="INPUTER_ID" jdbcType="INTEGER" />
		<result property="createId" column="CREATE_ID" jdbcType="INTEGER" />
		<result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="ReceiptModel_Column_List">
		ROW_ID,NOTES,BILL_CODE,BILL_DATE,EVENT_CODE,SUPPLIER_ID,RECEIPT_BRANCH_ID,RECEIPT_FARM_ID,INPUTER_ID,CREATE_ID,CREATE_DATE
	</sql>

	<!-- 单条新增 -->
	<insert id="insert" useGeneratedKeys="true"   keyProperty="rowId" parameterType="ReceiptModel">
		INSERT INTO SC_M_BILL_RECEIPT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			STATUS,
			DELETED_FLAG,
			NOTES,
			FARM_ID,
			COMPANY_ID,
			BILL_CODE,
			BILL_DATE,
			EVENT_CODE,
			SUPPLIER_ID,
			RECEIPT_BRANCH_ID,
			RECEIPT_FARM_ID,
			INPUTER_ID,
			CREATE_ID,
			CREATE_DATE
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{ status,jdbcType=CHAR},
			#{ deletedFlag,jdbcType=CHAR},
			#{ notes,jdbcType=VARCHAR},
			#{ farmId,jdbcType=INTEGER},
			#{ companyId,jdbcType=INTEGER},
			#{ billCode,jdbcType=VARCHAR},
			#{ billDate,jdbcType=DATE},
			#{ eventCode,jdbcType=VARCHAR},
			#{ supplierId,jdbcType=INTEGER},
			#{ receiptBranchId,jdbcType=INTEGER},
			#{ receiptFarmId,jdbcType=INTEGER},
			#{ inputerId,jdbcType=INTEGER},
			#{ createId,jdbcType=INTEGER},
			#{ createDate,jdbcType=TIMESTAMP}
		</trim>
	</insert>
	
	<!-- 批量新增 -->
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO SC_M_BILL_RECEIPT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			STATUS ,
			DELETED_FLAG ,
			NOTES ,
			FARM_ID ,
			COMPANY_ID ,
			BILL_CODE ,
			BILL_DATE ,
			EVENT_CODE ,
			SUPPLIER_ID ,
			RECEIPT_BRANCH_ID ,
			RECEIPT_FARM_ID ,
			INPUTER_ID ,
			CREATE_ID ,
			CREATE_DATE 
		</trim>
		VALUES
		<foreach collection="records" item="item" index="index"  separator="," >	
			<trim prefix="(" suffix=")" suffixOverrides=",">		
				#{item.status,jdbcType=CHAR},
				#{item.deletedFlag,jdbcType=CHAR},
				#{item.notes,jdbcType=VARCHAR},
				#{item.farmId,jdbcType=INTEGER},
				#{item.companyId,jdbcType=INTEGER},
				#{item.billCode,jdbcType=VARCHAR},
				#{item.billDate,jdbcType=DATE},
				#{item.eventCode,jdbcType=VARCHAR},
				#{item.supplierId,jdbcType=INTEGER},
				#{item.receiptBranchId,jdbcType=INTEGER},
				#{item.receiptFarmId,jdbcType=INTEGER},
				#{item.inputerId,jdbcType=INTEGER},
				#{item.createId,jdbcType=INTEGER},
				#{item.createDate,jdbcType=TIMESTAMP}
			</trim>
		</foreach>			
	</insert>
	
	<!--单条更新 -->
	<update id="update" parameterType="ReceiptModel" >
		UPDATE SC_M_BILL_RECEIPT 
		<set>
		<if test="status != null">STATUS = #{ status,jdbcType=CHAR},</if>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		<if test="billCode != null">BILL_CODE = #{ billCode,jdbcType=VARCHAR},</if>
		<if test="billDate != null">BILL_DATE = #{ billDate,jdbcType=DATE},</if>
		<if test="eventCode != null">EVENT_CODE = #{ eventCode,jdbcType=VARCHAR},</if>
		<if test="supplierId != null">SUPPLIER_ID = #{ supplierId,jdbcType=INTEGER},</if>
		<if test="receiptBranchId != null">RECEIPT_BRANCH_ID = #{ receiptBranchId,jdbcType=INTEGER},</if>
		<if test="receiptFarmId != null">RECEIPT_FARM_ID = #{ receiptFarmId,jdbcType=INTEGER},</if>
		<if test="inputerId != null">INPUTER_ID = #{ inputerId,jdbcType=INTEGER},</if>
		<if test="createId != null">CREATE_ID = #{ createId,jdbcType=INTEGER},</if>
		<if test="createDate != null">CREATE_DATE = #{ createDate,jdbcType=TIMESTAMP}</if>
		</set>
		WHERE
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量更新 -->
	<update id="updates" parameterType="java.util.List">
		<foreach collection="records" item="item" index="index" open="" close="" separator=";">	
			UPDATE SC_M_BILL_RECEIPT 
			<set>
			<if test="item.status != null">STATUS = #{item.status,jdbcType=CHAR},</if>
			<if test="item.notes != null">NOTES = #{item.notes,jdbcType=VARCHAR},</if>
			<if test="item.billCode != null">BILL_CODE = #{item.billCode,jdbcType=VARCHAR},</if>
			<if test="item.billDate != null">BILL_DATE = #{item.billDate,jdbcType=DATE},</if>
			<if test="item.eventCode != null">EVENT_CODE = #{item.eventCode,jdbcType=VARCHAR},</if>
			<if test="item.supplierId != null">SUPPLIER_ID = #{item.supplierId,jdbcType=INTEGER},</if>
			<if test="item.receiptBranchId != null">RECEIPT_BRANCH_ID = #{item.receiptBranchId,jdbcType=INTEGER},</if>
			<if test="item.receiptFarmId != null">RECEIPT_FARM_ID = #{item.receiptFarmId,jdbcType=INTEGER},</if>
			<if test="item.inputerId != null">INPUTER_ID = #{item.inputerId,jdbcType=INTEGER},</if>
			<if test="item.createId != null">CREATE_ID = #{item.createId,jdbcType=INTEGER},</if>
			<if test="item.createDate != null">CREATE_DATE = #{item.createDate,jdbcType=TIMESTAMP}</if>
			</set>
			WHERE
			ROW_ID = #{item.rowId,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<!--单条删除 -->
	<update id="delete" >
		UPDATE  SC_M_BILL_RECEIPT
		SET
		DELETED_FLAG =  '1'
		WHERE 
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量删除 -->
	<update id="deletes" >
		<foreach item="item" index="index" collection="ids" open=""  close="" separator=";">
		 UPDATE  SC_M_BILL_RECEIPT
		 SET
		 DELETED_FLAG  =  '1'  WHERE 
		 ROW_ID =#{item}
        </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCon" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  SC_M_BILL_RECEIPT
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' 
		 AND FARM_ID=#{ farmId,jdbcType=INTEGER}
		 AND ${item.RECORD_CON} = #{item.RECORD_VALUES}
		 </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCons" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  SC_M_BILL_RECEIPT
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' ${item}
		</foreach>	
	</update>
	
	<!--查询List记录 -->
	<select id="searchToList" resultMap="ReceiptResult">
		SELECT 
		<include refid="ReceiptModel_Column_List" />
		FROM SC_M_BILL_RECEIPT WHERE DELETED_FLAG='0' 
		AND FARM_ID=#{ farmId,jdbcType=INTEGER}
	</select>
	
	<!--查询根据主键查单条记录 -->
	<select id="searchById" resultMap="ReceiptResult" >
		SELECT 
		<include refid="ReceiptModel_Column_List" />
		FROM SC_M_BILL_RECEIPT WHERE DELETED_FLAG='0'  AND
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</select>
	
	<!--根据条件查询有效数据 --><!-- {condition} -->
	<select id="searchListByCon" resultMap="ReceiptResult" >
		SELECT 
		<include refid="ReceiptModel_Column_List" />
		FROM SC_M_BILL_RECEIPT
		WHERE DELETED_FLAG='0'  ${condition} 
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAllListByCon" resultMap="ReceiptResult" >
		SELECT 
		<include refid="ReceiptModel_Column_List" />
		FROM SC_M_BILL_RECEIPT
		WHERE ${condition}
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAll" resultMap="ReceiptResult" >
		SELECT *
		FROM SC_M_BILL_RECEIPT
		WHERE ${condition}
	</select>
	
	<!-- 直接sql操作 -->
	<select id="operSql" resultMap="ReceiptResult"> ${sql} </select>

</mapper>

