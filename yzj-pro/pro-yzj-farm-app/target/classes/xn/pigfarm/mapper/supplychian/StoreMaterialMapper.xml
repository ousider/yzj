<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="xn.pigfarm.mapper.supplychian.StoreMaterialMapper">

	<resultMap id="StoreMaterialResult"  type="StoreMaterialModel" >
		<result property="rowId" column="ROW_ID" jdbcType="INTEGER" />
		<result property="deletedFlag" column="DELETED_FLAG" jdbcType="CHAR" />
		<result property="notes" column="NOTES" jdbcType="VARCHAR" />
		<result property="farmId" column="FARM_ID" jdbcType="INTEGER" />
		<result property="companyId" column="COMPANY_ID" jdbcType="INTEGER" />
		<result property="materialId" column="MATERIAL_ID" jdbcType="INTEGER" />
		<result property="materialOnly" column="MATERIAL_ONLY" jdbcType="VARCHAR" />
		<result property="materialBatch" column="MATERIAL_BATCH" jdbcType="VARCHAR" />
		<result property="productionDate" column="PRODUCTION_DATE" jdbcType="DATE" />
		<result property="effectiveDate" column="EFFECTIVE_DATE" jdbcType="DATE" />
		<result property="warehouseId" column="WAREHOUSE_ID" jdbcType="INTEGER" />
		<result property="actualQty" column="ACTUAL_QTY" jdbcType="DECIMAL" />
		<result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="StoreMaterialModel_Column_List">
		ROW_ID,NOTES,FARM_ID,COMPANY_ID,MATERIAL_ID,MATERIAL_ONLY,MATERIAL_BATCH,PRODUCTION_DATE,EFFECTIVE_DATE,WAREHOUSE_ID,ACTUAL_QTY,CREATE_DATE
	</sql>

	<!-- 单条新增 -->
	<insert id="insert" useGeneratedKeys="true"   keyProperty="rowId" parameterType="StoreMaterialModel">
		INSERT INTO SC_M_STORE_MATERIAL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			DELETED_FLAG,
			NOTES,
			FARM_ID,
			COMPANY_ID,
			MATERIAL_ID,
			MATERIAL_ONLY,
			MATERIAL_BATCH,
			PRODUCTION_DATE,
			EFFECTIVE_DATE,
			WAREHOUSE_ID,
			ACTUAL_QTY,
			CREATE_DATE
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{ deletedFlag,jdbcType=CHAR},
			#{ notes,jdbcType=VARCHAR},
			#{ farmId,jdbcType=INTEGER},
			#{ companyId,jdbcType=INTEGER},
			#{ materialId,jdbcType=INTEGER},
			#{ materialOnly,jdbcType=VARCHAR},
			#{ materialBatch,jdbcType=VARCHAR},
			#{ productionDate,jdbcType=DATE},
			#{ effectiveDate,jdbcType=DATE},
			#{ warehouseId,jdbcType=INTEGER},
			#{ actualQty,jdbcType=DECIMAL},
			#{ createDate,jdbcType=TIMESTAMP}
		</trim>
	</insert>
	
	<!-- 批量新增 -->
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO SC_M_STORE_MATERIAL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			DELETED_FLAG ,
			NOTES ,
			FARM_ID ,
			COMPANY_ID ,
			MATERIAL_ID ,
			MATERIAL_ONLY ,
			MATERIAL_BATCH ,
			PRODUCTION_DATE ,
			EFFECTIVE_DATE ,
			WAREHOUSE_ID ,
			ACTUAL_QTY ,
			CREATE_DATE 
		</trim>
		VALUES
		<foreach collection="records" item="item" index="index"  separator="," >	
			<trim prefix="(" suffix=")" suffixOverrides=",">		
				#{item.deletedFlag,jdbcType=CHAR},
				#{item.notes,jdbcType=VARCHAR},
				#{item.farmId,jdbcType=INTEGER},
				#{item.companyId,jdbcType=INTEGER},
				#{item.materialId,jdbcType=INTEGER},
				#{item.materialOnly,jdbcType=VARCHAR},
				#{item.materialBatch,jdbcType=VARCHAR},
				#{item.productionDate,jdbcType=DATE},
				#{item.effectiveDate,jdbcType=DATE},
				#{item.warehouseId,jdbcType=INTEGER},
				#{item.actualQty,jdbcType=DECIMAL},
				#{item.createDate,jdbcType=TIMESTAMP}
			</trim>
		</foreach>			
	</insert>
	
	<!--单条更新 -->
	<update id="update" parameterType="StoreMaterialModel" >
		UPDATE SC_M_STORE_MATERIAL 
		<set>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		<if test="materialId != null">MATERIAL_ID = #{ materialId,jdbcType=INTEGER},</if>
		<if test="materialOnly != null">MATERIAL_ONLY = #{ materialOnly,jdbcType=VARCHAR},</if>
		<if test="materialBatch != null">MATERIAL_BATCH = #{ materialBatch,jdbcType=VARCHAR},</if>
		<if test="productionDate != null">PRODUCTION_DATE = #{ productionDate,jdbcType=DATE},</if>
		<if test="effectiveDate != null">EFFECTIVE_DATE = #{ effectiveDate,jdbcType=DATE},</if>
		<if test="warehouseId != null">WAREHOUSE_ID = #{ warehouseId,jdbcType=INTEGER},</if>
		<if test="actualQty != null">ACTUAL_QTY = #{ actualQty,jdbcType=DECIMAL},</if>
		<if test="createDate != null">CREATE_DATE = #{ createDate,jdbcType=TIMESTAMP}</if>
		</set>
		WHERE
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量更新 -->
	<update id="updates" parameterType="java.util.List">
		<foreach collection="records" item="item" index="index" open="" close="" separator=";">	
			UPDATE SC_M_STORE_MATERIAL 
			<set>
			<if test="item.deletedFlag != null">DELETED_FLAG = #{item.deletedFlag,jdbcType=VARCHAR},</if>
			<if test="item.notes != null">NOTES = #{item.notes,jdbcType=VARCHAR},</if>
			<if test="item.materialId != null">MATERIAL_ID = #{item.materialId,jdbcType=INTEGER},</if>
			<if test="item.materialOnly != null">MATERIAL_ONLY = #{item.materialOnly,jdbcType=VARCHAR},</if>
			<if test="item.materialBatch != null">MATERIAL_BATCH = #{item.materialBatch,jdbcType=VARCHAR},</if>
			<if test="item.productionDate != null">PRODUCTION_DATE = #{item.productionDate,jdbcType=DATE},</if>
			<if test="item.effectiveDate != null">EFFECTIVE_DATE = #{item.effectiveDate,jdbcType=DATE},</if>
			<if test="item.warehouseId != null">WAREHOUSE_ID = #{item.warehouseId,jdbcType=INTEGER},</if>
			<if test="item.actualQty != null">ACTUAL_QTY = #{item.actualQty,jdbcType=DECIMAL},</if>
			<if test="item.createDate != null">CREATE_DATE = #{item.createDate,jdbcType=TIMESTAMP}</if>
			</set>
			WHERE
			ROW_ID = #{item.rowId,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<!--单条删除 -->
	<update id="delete" >
		UPDATE  SC_M_STORE_MATERIAL
		SET
		DELETED_FLAG =  '1'
		WHERE 
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量删除 -->
	<update id="deletes" >
		<foreach item="item" index="index" collection="ids" open=""  close="" separator=";">
		 UPDATE  SC_M_STORE_MATERIAL
		 SET
		 DELETED_FLAG  =  '1'  WHERE 
		 ROW_ID =#{item}
        </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCon" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  SC_M_STORE_MATERIAL
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' 
		 AND FARM_ID=#{ farmId,jdbcType=INTEGER}
		 AND ${item.RECORD_CON} = #{item.RECORD_VALUES}
		 </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCons" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  SC_M_STORE_MATERIAL
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' ${item}
		</foreach>	
	</update>
	
	<!--查询List记录 -->
	<select id="searchToList" resultMap="StoreMaterialResult">
		SELECT 
		<include refid="StoreMaterialModel_Column_List" />
		FROM SC_M_STORE_MATERIAL WHERE DELETED_FLAG='0' 
		AND FARM_ID=#{ farmId,jdbcType=INTEGER}
	</select>
	
	<!--查询根据主键查单条记录 -->
	<select id="searchById" resultMap="StoreMaterialResult" >
		SELECT 
		<include refid="StoreMaterialModel_Column_List" />
		FROM SC_M_STORE_MATERIAL WHERE DELETED_FLAG='0'  AND
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</select>
	
	<!--根据条件查询有效数据 --><!-- {condition} -->
	<select id="searchListByCon" resultMap="StoreMaterialResult" >
		SELECT 
		<include refid="StoreMaterialModel_Column_List" />
		FROM SC_M_STORE_MATERIAL
		WHERE DELETED_FLAG='0'  ${condition} 
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAllListByCon" resultMap="StoreMaterialResult" >
		SELECT 
		<include refid="StoreMaterialModel_Column_List" />
		FROM SC_M_STORE_MATERIAL
		WHERE ${condition}
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAll" resultMap="StoreMaterialResult" >
		SELECT *
		FROM SC_M_STORE_MATERIAL
		WHERE ${condition}
	</select>
	
	<!-- 直接sql操作 -->
	<select id="operSql" resultMap="StoreMaterialResult"> ${sql} </select>

	<!--批量加入存库数量 -->
	<update id="updateActualQtyToStore" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  SC_M_STORE_MATERIAL
		 SET ACTUAL_QTY = ACTUAL_QTY + #{ item.qty,jdbcType=DECIMAL}
		 WHERE DELETED_FLAG  =  '0' 
		 AND FARM_ID = #{ item.farmId,jdbcType=INTEGER}
		 AND MATERIAL_ONLY = #{ item.materialOnly,jdbcType=VARCHAR}
		 AND MATERIAL_BATCH = #{ item.materialBatch,jdbcType=VARCHAR}
		 AND WAREHOUSE_ID = #{ item.warehouseId,jdbcType=VARCHAR}
		 </foreach>	
	</update>
	
	<!--查询当时库存某个物料的总数减去已被其他技术员预出库的数量  -->
	<select id="searchTotalQtyExceptOtherUse" resultMap="StoreMaterialResult">
		SELECT T1.actualQty - IFNULL(T2.outputQty,0) AS ACTUAL_QTY
		FROM
		( SELECT SUM(A.ACTUAL_QTY) AS actualQty
		, A.MATERIAL_ID AS materialId, A.WAREHOUSE_ID AS warehouseId 
		FROM SC_M_STORE_MATERIAL A INNER JOIN CD_M_MATERIAL B 
		ON (B.DELETED_FLAG = '0' AND A.MATERIAL_ID = B.ROW_ID) 
		WHERE A.DELETED_FLAG = '0' AND A.ACTUAL_QTY > 0 
		AND A.FARM_ID = #{ farmId,jdbcType=INTEGER} 
		AND A.WAREHOUSE_ID = #{ warehouseId,jdbcType=INTEGER} 
		AND MATERIAL_ID = #{ materialId,jdbcType=INTEGER} 
		GROUP BY A.WAREHOUSE_ID, A.MATERIAL_ID ) 
		T1 LEFT OUTER JOIN 
		( SELECT SUM(B.OUTPUT_QTY) AS outputQty, B.MATERIAL_ID AS materialId
		, B.OUTPUT_WAREHOUSE_ID AS warehouseId FROM SC_M_BILL_OUTPUT A 
		INNER JOIN SC_M_BILL_OUTPUT_DETAIL B 
		ON (B.DELETED_FLAG = '0' AND A.ROW_ID = B.OUTPUT_ID 
		AND B.OUTPUT_WAREHOUSE_ID = #{ warehouseId,jdbcType=INTEGER}  
		AND A.FARM_ID = B.FARM_ID) 
		WHERE A.DELETED_FLAG = '0' 
		<if test='dafengModel == "1" || dafengModel == "2"'>
		AND (A.FARM_ID = #{ farmId,jdbcType=INTEGER} 
			OR A.COMPANY_ID = #{ farmId,jdbcType=INTEGER})
		</if>
		<if test='dafengModel == "-1"'>
		AND A.FARM_ID = #{ farmId,jdbcType=INTEGER} 
		</if>
		AND A.EVENT_CODE = 'OUTPUT_USE'
		AND A.STATUS = '1' 
		AND MATERIAL_ID = #{ materialId,jdbcType=INTEGER} 
		GROUP BY B.OUTPUT_WAREHOUSE_ID, B.MATERIAL_ID) 
		T2 ON (T1.materialId = T2.materialId 
		AND T1.warehouseId = T2.warehouseId) 
	</select>
	
</mapper>

