<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="xn.pigfarm.mapper.supplychian.OutputMapper">

	<resultMap id="OutputResult"  type="OutputModel" >
		<result property="rowId" column="ROW_ID" jdbcType="INTEGER" />
		<result property="status" column="STATUS" jdbcType="CHAR" />
		<result property="deletedFlag" column="DELETED_FLAG" jdbcType="CHAR" />
		<result property="notes" column="NOTES" jdbcType="VARCHAR" />
		<result property="farmId" column="FARM_ID" jdbcType="INTEGER" />
		<result property="companyId" column="COMPANY_ID" jdbcType="INTEGER" />
		<result property="billCode" column="BILL_CODE" jdbcType="VARCHAR" />
		<result property="billDate" column="BILL_DATE" jdbcType="DATE" />
		<result property="eventCode" column="EVENT_CODE" jdbcType="VARCHAR" />
		<result property="outputWarehouseId" column="OUTPUT_WAREHOUSE_ID" jdbcType="INTEGER" />
		<result property="outputerId" column="OUTPUTER_ID" jdbcType="INTEGER" />
		<result property="outputDestination" column="OUTPUT_DESTINATION" jdbcType="CHAR" />
		<result property="outputFarmId" column="OUTPUT_FARM_ID" jdbcType="INTEGER" />
		<result property="outputSwineryId" column="OUTPUT_SWINERY_ID" jdbcType="INTEGER" />
		<result property="outputHouseId" column="OUTPUT_HOUSE_ID" jdbcType="INTEGER" />
		<result property="outputDeptId" column="OUTPUT_DEPT_ID" jdbcType="INTEGER" />
		<result property="returnOrgin" column="RETURN_ORGIN" jdbcType="CHAR" />
		<result property="allotDestination" column="ALLOT_DESTINATION" jdbcType="CHAR" />
		<result property="outputToFarmId" column="OUTPUT_TO_FARM_ID" jdbcType="INTEGER" />
		<result property="outputToWarehouseId" column="OUTPUT_TO_WAREHOUSE_ID" jdbcType="INTEGER" />
		<result property="outputUseNumber" column="OUTPUT_USE_NUMBER" jdbcType="CHAR" />
		<result property="outputUseDate" column="OUTPUT_USE_DATE" jdbcType="TIMESTAMP" />
		<result property="userId" column="USER_ID" jdbcType="INTEGER" />
		<result property="createId" column="CREATE_ID" jdbcType="INTEGER" />
		<result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP" />
		<result property="printTimes" column="PRINT_TIMES" jdbcType="INTEGER" />
		<result property="oaUsername" column="OA_USERNAME" jdbcType="VARCHAR" />
		<result property="reviewFailReason" column="REVIEW_FAIL_REASON" jdbcType="VARCHAR" />
		<result property="ftriggerFlag" column="FtriggerFlag" jdbcType="INTEGER" />
		<result property="requestid" column="requestid" jdbcType="INTEGER" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="OutputModel_Column_List">
		ROW_ID,NOTES,FARM_ID,BILL_CODE,BILL_DATE,EVENT_CODE,OUTPUT_WAREHOUSE_ID,OUTPUTER_ID,OUTPUT_DESTINATION,OUTPUT_FARM_ID,OUTPUT_SWINERY_ID,OUTPUT_HOUSE_ID,OUTPUT_DEPT_ID,RETURN_ORGIN,ALLOT_DESTINATION,OUTPUT_TO_FARM_ID,OUTPUT_TO_WAREHOUSE_ID,OUTPUT_USE_NUMBER,OUTPUT_USE_DATE,USER_ID,CREATE_ID,CREATE_DATE,PRINT_TIMES,OA_USERNAME,REVIEW_FAIL_REASON,FtriggerFlag,requestid
	</sql>

	<!-- 单条新增 -->
	<insert id="insert" useGeneratedKeys="true"   keyProperty="rowId" parameterType="OutputModel">
		INSERT INTO SC_M_BILL_OUTPUT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			STATUS,
			DELETED_FLAG,
			NOTES,
			FARM_ID,
			COMPANY_ID,
			BILL_CODE,
			BILL_DATE,
			EVENT_CODE,
			OUTPUT_WAREHOUSE_ID,
			OUTPUTER_ID,
			OUTPUT_DESTINATION,
			OUTPUT_FARM_ID,
			OUTPUT_SWINERY_ID,
			OUTPUT_HOUSE_ID,
			OUTPUT_DEPT_ID,
			RETURN_ORGIN,
			ALLOT_DESTINATION,
			OUTPUT_TO_FARM_ID,
			OUTPUT_TO_WAREHOUSE_ID,
			OUTPUT_USE_NUMBER,
			OUTPUT_USE_DATE,
			USER_ID,
			CREATE_ID,
			CREATE_DATE,
			PRINT_TIMES,
			OA_USERNAME,
			REVIEW_FAIL_REASON,
			FtriggerFlag,
			requestid
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{ status,jdbcType=CHAR},
			#{ deletedFlag,jdbcType=CHAR},
			#{ notes,jdbcType=VARCHAR},
			#{ farmId,jdbcType=INTEGER},
			#{ companyId,jdbcType=INTEGER},
			#{ billCode,jdbcType=VARCHAR},
			#{ billDate,jdbcType=DATE},
			#{ eventCode,jdbcType=VARCHAR},
			#{ outputWarehouseId,jdbcType=INTEGER},
			#{ outputerId,jdbcType=INTEGER},
			#{ outputDestination,jdbcType=CHAR},
			#{ outputFarmId,jdbcType=INTEGER},
			#{ outputSwineryId,jdbcType=INTEGER},
			#{ outputHouseId,jdbcType=INTEGER},
			#{ outputDeptId,jdbcType=INTEGER},
			#{ returnOrgin,jdbcType=CHAR},
			#{ allotDestination,jdbcType=CHAR},
			#{ outputToFarmId,jdbcType=INTEGER},
			#{ outputToWarehouseId,jdbcType=INTEGER},
			#{ outputUseNumber,jdbcType=CHAR},
			#{ outputUseDate,jdbcType=TIMESTAMP},
			#{ userId,jdbcType=INTEGER},
			#{ createId,jdbcType=INTEGER},
			#{ createDate,jdbcType=TIMESTAMP},
			#{ printTimes,jdbcType=INTEGER},
			#{ oaUsername,jdbcType=VARCHAR},
			#{ reviewFailReason,jdbcType=VARCHAR},
			#{ ftriggerFlag,jdbcType=INTEGER},
			#{ requestid,jdbcType=INTEGER}
		</trim>
	</insert>
	
	<!-- 批量新增 -->
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO SC_M_BILL_OUTPUT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			STATUS ,
			DELETED_FLAG ,
			NOTES ,
			FARM_ID ,
			COMPANY_ID ,
			BILL_CODE ,
			BILL_DATE ,
			EVENT_CODE ,
			OUTPUT_WAREHOUSE_ID ,
			OUTPUTER_ID ,
			OUTPUT_DESTINATION ,
			OUTPUT_FARM_ID ,
			OUTPUT_SWINERY_ID ,
			OUTPUT_HOUSE_ID ,
			OUTPUT_DEPT_ID ,
			RETURN_ORGIN ,
			ALLOT_DESTINATION ,
			OUTPUT_TO_FARM_ID ,
			OUTPUT_TO_WAREHOUSE_ID ,
			OUTPUT_USE_NUMBER ,
			OUTPUT_USE_DATE ,
			USER_ID ,
			CREATE_ID ,
			CREATE_DATE ,
			PRINT_TIMES ,
			OA_USERNAME ,
			REVIEW_FAIL_REASON ,
			FtriggerFlag ,
			requestid 
		</trim>
		VALUES
		<foreach collection="records" item="item" index="index"  separator="," >	
			<trim prefix="(" suffix=")" suffixOverrides=",">		
				#{item.status,jdbcType=CHAR},
				#{item.deletedFlag,jdbcType=CHAR},
				#{item.notes,jdbcType=VARCHAR},
				#{item.farmId,jdbcType=INTEGER},
				#{item.companyId,jdbcType=INTEGER},
				#{item.billCode,jdbcType=VARCHAR},
				#{item.billDate,jdbcType=DATE},
				#{item.eventCode,jdbcType=VARCHAR},
				#{item.outputWarehouseId,jdbcType=INTEGER},
				#{item.outputerId,jdbcType=INTEGER},
				#{item.outputDestination,jdbcType=CHAR},
				#{item.outputFarmId,jdbcType=INTEGER},
				#{item.outputSwineryId,jdbcType=INTEGER},
				#{item.outputHouseId,jdbcType=INTEGER},
				#{item.outputDeptId,jdbcType=INTEGER},
				#{item.returnOrgin,jdbcType=CHAR},
				#{item.allotDestination,jdbcType=CHAR},
				#{item.outputToFarmId,jdbcType=INTEGER},
				#{item.outputToWarehouseId,jdbcType=INTEGER},
				#{item.outputUseNumber,jdbcType=CHAR},
				#{item.outputUseDate,jdbcType=TIMESTAMP},
				#{item.userId,jdbcType=INTEGER},
				#{item.createId,jdbcType=INTEGER},
				#{item.createDate,jdbcType=TIMESTAMP},
				#{item.printTimes,jdbcType=INTEGER},
				#{item.oaUsername,jdbcType=VARCHAR},
				#{item.reviewFailReason,jdbcType=VARCHAR},
				#{item.ftriggerFlag,jdbcType=INTEGER},
				#{item.requestid,jdbcType=INTEGER}
			</trim>
		</foreach>			
	</insert>
	
	<!--单条更新 -->
	<update id="update" parameterType="OutputModel" >
		UPDATE SC_M_BILL_OUTPUT 
		<set>
		<if test="status != null">STATUS = #{ status,jdbcType=CHAR},</if>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		<if test="billCode != null">BILL_CODE = #{ billCode,jdbcType=VARCHAR},</if>
		<if test="billDate != null">BILL_DATE = #{ billDate,jdbcType=DATE},</if>
		<if test="eventCode != null">EVENT_CODE = #{ eventCode,jdbcType=VARCHAR},</if>
		<if test="outputWarehouseId != null">OUTPUT_WAREHOUSE_ID = #{ outputWarehouseId,jdbcType=INTEGER},</if>
		<if test="outputerId != null">OUTPUTER_ID = #{ outputerId,jdbcType=INTEGER},</if>
		<if test="outputDestination != null">OUTPUT_DESTINATION = #{ outputDestination,jdbcType=CHAR},</if>
		<if test="outputFarmId != null">OUTPUT_FARM_ID = #{ outputFarmId,jdbcType=INTEGER},</if>
		<if test="outputSwineryId != null">OUTPUT_SWINERY_ID = #{ outputSwineryId,jdbcType=INTEGER},</if>
		<if test="outputHouseId != null">OUTPUT_HOUSE_ID = #{ outputHouseId,jdbcType=INTEGER},</if>
		<if test="outputDeptId != null">OUTPUT_DEPT_ID = #{ outputDeptId,jdbcType=INTEGER},</if>
		<if test="returnOrgin != null">RETURN_ORGIN = #{ returnOrgin,jdbcType=CHAR},</if>
		<if test="allotDestination != null">ALLOT_DESTINATION = #{ allotDestination,jdbcType=CHAR},</if>
		<if test="outputToFarmId != null">OUTPUT_TO_FARM_ID = #{ outputToFarmId,jdbcType=INTEGER},</if>
		<if test="outputToWarehouseId != null">OUTPUT_TO_WAREHOUSE_ID = #{ outputToWarehouseId,jdbcType=INTEGER},</if>
		<if test="outputUseNumber != null">OUTPUT_USE_NUMBER = #{ outputUseNumber,jdbcType=CHAR},</if>
		<if test="outputUseDate != null">OUTPUT_USE_DATE = #{ outputUseDate,jdbcType=TIMESTAMP},</if>
		<if test="userId != null">USER_ID = #{ userId,jdbcType=INTEGER},</if>
		<if test="createId != null">CREATE_ID = #{ createId,jdbcType=INTEGER},</if>
		<if test="createDate != null">CREATE_DATE = #{ createDate,jdbcType=TIMESTAMP},</if>
		<if test="printTimes != null">PRINT_TIMES = #{ printTimes,jdbcType=INTEGER},</if>
		<if test="oaUsername != null">OA_USERNAME = #{ oaUsername,jdbcType=VARCHAR},</if>
		<if test="reviewFailReason != null">REVIEW_FAIL_REASON = #{ reviewFailReason,jdbcType=VARCHAR},</if>
		<if test="ftriggerFlag != null">FtriggerFlag = #{ ftriggerFlag,jdbcType=INTEGER},</if>
		<if test="requestid != null">requestid = #{ requestid,jdbcType=INTEGER}</if>
		</set>
		WHERE
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量更新 -->
	<update id="updates" parameterType="java.util.List">
		<foreach collection="records" item="item" index="index" open="" close="" separator=";">	
			UPDATE SC_M_BILL_OUTPUT 
			<set>
			<if test="item.status != null">STATUS = #{item.status,jdbcType=CHAR},</if>
			<if test="item.notes != null">NOTES = #{item.notes,jdbcType=VARCHAR},</if>
			<if test="item.billCode != null">BILL_CODE = #{item.billCode,jdbcType=VARCHAR},</if>
			<if test="item.billDate != null">BILL_DATE = #{item.billDate,jdbcType=DATE},</if>
			<if test="item.eventCode != null">EVENT_CODE = #{item.eventCode,jdbcType=VARCHAR},</if>
			<if test="item.outputWarehouseId != null">OUTPUT_WAREHOUSE_ID = #{item.outputWarehouseId,jdbcType=INTEGER},</if>
			<if test="item.outputerId != null">OUTPUTER_ID = #{item.outputerId,jdbcType=INTEGER},</if>
			<if test="item.outputDestination != null">OUTPUT_DESTINATION = #{item.outputDestination,jdbcType=CHAR},</if>
			<if test="item.outputFarmId != null">OUTPUT_FARM_ID = #{item.outputFarmId,jdbcType=INTEGER},</if>
			<if test="item.outputSwineryId != null">OUTPUT_SWINERY_ID = #{item.outputSwineryId,jdbcType=INTEGER},</if>
			<if test="item.outputHouseId != null">OUTPUT_HOUSE_ID = #{item.outputHouseId,jdbcType=INTEGER},</if>
			<if test="item.outputDeptId != null">OUTPUT_DEPT_ID = #{item.outputDeptId,jdbcType=INTEGER},</if>
			<if test="item.returnOrgin != null">RETURN_ORGIN = #{item.returnOrgin,jdbcType=CHAR},</if>
			<if test="item.allotDestination != null">ALLOT_DESTINATION = #{item.allotDestination,jdbcType=CHAR},</if>
			<if test="item.outputToFarmId != null">OUTPUT_TO_FARM_ID = #{item.outputToFarmId,jdbcType=INTEGER},</if>
			<if test="item.outputToWarehouseId != null">OUTPUT_TO_WAREHOUSE_ID = #{item.outputToWarehouseId,jdbcType=INTEGER},</if>
			<if test="item.outputUseNumber != null">OUTPUT_USE_NUMBER = #{item.outputUseNumber,jdbcType=CHAR},</if>
			<if test="item.outputUseDate != null">OUTPUT_USE_DATE = #{item.outputUseDate,jdbcType=TIMESTAMP},</if>
			<if test="item.userId != null">USER_ID = #{item.userId,jdbcType=INTEGER},</if>
			<if test="item.createId != null">CREATE_ID = #{item.createId,jdbcType=INTEGER},</if>
			<if test="item.createDate != null">CREATE_DATE = #{item.createDate,jdbcType=TIMESTAMP},</if>
			<if test="item.printTimes != null">PRINT_TIMES = #{item.printTimes,jdbcType=INTEGER},</if>
			<if test="item.oaUsername != null">OA_USERNAME = #{item.oaUsername,jdbcType=VARCHAR},</if>
			<if test="item.reviewFailReason != null">REVIEW_FAIL_REASON = #{item.reviewFailReason,jdbcType=VARCHAR},</if>
			<if test="item.ftriggerFlag != null">FtriggerFlag = #{item.ftriggerFlag,jdbcType=INTEGER},</if>
			<if test="item.requestid != null">requestid = #{item.requestid,jdbcType=INTEGER}</if>
			</set>
			WHERE
			ROW_ID = #{item.rowId,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<!--单条删除 -->
	<update id="delete" >
		UPDATE  SC_M_BILL_OUTPUT
		SET
		DELETED_FLAG =  '1'
		WHERE 
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量删除 -->
	<update id="deletes" >
		<foreach item="item" index="index" collection="ids" open=""  close="" separator=";">
		 UPDATE  SC_M_BILL_OUTPUT
		 SET
		 DELETED_FLAG  =  '1'  WHERE 
		 ROW_ID =#{item}
        </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCon" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  SC_M_BILL_OUTPUT
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' 
		 AND FARM_ID=#{ farmId,jdbcType=INTEGER}
		 AND ${item.RECORD_CON} = #{item.RECORD_VALUES}
		 </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCons" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  SC_M_BILL_OUTPUT
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' ${item}
		</foreach>	
	</update>
	
	<!--查询List记录 -->
	<select id="searchToList" resultMap="OutputResult">
		SELECT 
		<include refid="OutputModel_Column_List" />
		FROM SC_M_BILL_OUTPUT WHERE DELETED_FLAG='0' 
		AND FARM_ID=#{ farmId,jdbcType=INTEGER}
	</select>
	
	<!--查询根据主键查单条记录 -->
	<select id="searchById" resultMap="OutputResult" >
		SELECT 
		<include refid="OutputModel_Column_List" />
		FROM SC_M_BILL_OUTPUT WHERE DELETED_FLAG='0'  AND
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</select>
	
	<!--根据条件查询有效数据 --><!-- {condition} -->
	<select id="searchListByCon" resultMap="OutputResult" >
		SELECT 
		<include refid="OutputModel_Column_List" />
		FROM SC_M_BILL_OUTPUT
		WHERE DELETED_FLAG='0'  ${condition} 
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAllListByCon" resultMap="OutputResult" >
		SELECT 
		<include refid="OutputModel_Column_List" />
		FROM SC_M_BILL_OUTPUT
		WHERE ${condition}
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAll" resultMap="OutputResult" >
		SELECT *
		FROM SC_M_BILL_OUTPUT
		WHERE ${condition}
	</select>
	
	<!-- 直接sql操作 -->
	<select id="operSql" resultMap="OutputResult"> ${sql} </select>
	
	<!--修改状态以及附加条件 -->
	<update id="updateStatus" parameterType="java.util.Map">
		UPDATE SC_M_BILL_OUTPUT 
		<set>
		<if test="status != null">STATUS = #{status,jdbcType=CHAR},</if>
		<if test="outputerId != null">OUTPUTER_ID = #{outputerId,jdbcType=INTEGER},</if>
		<if test="outputUseDate != null">OUTPUT_USE_DATE = #{outputUseDate,jdbcType=TIMESTAMP}</if>
		</set>
		WHERE
		${condition}
	</update>
	
</mapper>

