<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="xn.pigfarm.mapper.basicinfo.MaterialMapper">

	<resultMap id="MaterialResult"  type="MaterialModel" >
		<result property="rowId" column="ROW_ID" jdbcType="INTEGER" />
		<result property="sortNbr" column="SORT_NBR" jdbcType="INTEGER" />
		<result property="status" column="STATUS" jdbcType="CHAR" />
		<result property="deletedFlag" column="DELETED_FLAG" jdbcType="CHAR" />
		<result property="originFlag" column="ORIGIN_FLAG" jdbcType="CHAR" />
		<result property="originApp" column="ORIGIN_APP" jdbcType="VARCHAR" />
		<result property="notes" column="NOTES" jdbcType="VARCHAR" />
		<result property="farmId" column="FARM_ID" jdbcType="INTEGER" />
		<result property="companyId" column="COMPANY_ID" jdbcType="INTEGER" />
		<result property="relatedId" column="RELATED_ID" jdbcType="INTEGER" />
		<result property="groupId" column="GROUP_ID" jdbcType="INTEGER" />
		<result property="businessCode" column="BUSINESS_CODE" jdbcType="VARCHAR" />
		<result property="materialName" column="MATERIAL_NAME" jdbcType="VARCHAR" />
		<result property="materialType" column="MATERIAL_TYPE" jdbcType="VARCHAR" />
		<result property="materialSource" column="MATERIAL_SOURCE" jdbcType="VARCHAR" />
		<result property="unit" column="UNIT" jdbcType="VARCHAR" />
		<result property="isWarehouse" column="IS_WAREHOUSE" jdbcType="CHAR" />
		<result property="isPurchase" column="IS_PURCHASE" jdbcType="CHAR" />
		<result property="isSell" column="IS_SELL" jdbcType="CHAR" />
		<result property="defaultWarehouse" column="DEFAULT_WAREHOUSE" jdbcType="INTEGER" />
		<result property="price" column="PRICE" jdbcType="DECIMAL" />
		<result property="canLoseStock" column="CAN_LOSE_STOCK" jdbcType="VARCHAR" />
		<result property="canPurchaseReturn" column="CAN_PURCHASE_RETURN" jdbcType="VARCHAR" />
		<result property="canScrap" column="CAN_SCRAP" jdbcType="VARCHAR" />
		<result property="spec" column="SPEC" jdbcType="VARCHAR" />
		<result property="specNum" column="SPEC_NUM" jdbcType="DECIMAL" />
		<result property="specAll" column="SPEC_ALL" jdbcType="VARCHAR" />
		<result property="safeStock" column="SAFE_STOCK" jdbcType="DECIMAL" />
		<result property="stockSubjectId" column="STOCK_SUBJECT_ID" jdbcType="INTEGER" />
		<result property="costAccSubjectId" column="COST_ACC_SUBJECT_ID" jdbcType="INTEGER" />
		<result property="salesSubjectId" column="SALES_SUBJECT_ID" jdbcType="INTEGER" />
		<result property="rmvaluerate" column="RMVALUERATE" jdbcType="DECIMAL" />
		<result property="freePercent" column="FREE_PERCENT" jdbcType="VARCHAR" />
		<result property="supplierId" column="SUPPLIER_ID" jdbcType="INTEGER" />
		<result property="manufacturer" column="MANUFACTURER" jdbcType="VARCHAR" />
		<result property="outputMinQty" column="OUTPUT_MIN_QTY" jdbcType="DECIMAL" />
		<result property="firstFinanceMaterialType" column="FIRST_FINANCE_MATERIAL_TYPE" jdbcType="VARCHAR" />
		<result property="secondFinanceMaterialType" column="SECOND_FINANCE_MATERIAL_TYPE" jdbcType="VARCHAR" />
		<result property="materialFirstClass" column="MATERIAL_FIRST_CLASS" jdbcType="CHAR" />
		<result property="materialSecondClass" column="MATERIAL_SECOND_CLASS" jdbcType="CHAR" />
		<result property="materialClassNumber" column="MATERIAL_CLASS_NUMBER" jdbcType="CHAR" />
		<result property="financeSubject" column="FINANCE_SUBJECT" jdbcType="CHAR" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="MaterialModel_Column_List">
		ROW_ID,SORT_NBR,NOTES,FARM_ID,COMPANY_ID,RELATED_ID,GROUP_ID,BUSINESS_CODE,MATERIAL_NAME,MATERIAL_TYPE,MATERIAL_SOURCE,UNIT,IS_WAREHOUSE,IS_PURCHASE,IS_SELL,DEFAULT_WAREHOUSE,PRICE,CAN_LOSE_STOCK,CAN_PURCHASE_RETURN,CAN_SCRAP,SPEC,SPEC_NUM,SPEC_ALL,SAFE_STOCK,STOCK_SUBJECT_ID,COST_ACC_SUBJECT_ID,SALES_SUBJECT_ID,RMVALUERATE,FREE_PERCENT,SUPPLIER_ID,MANUFACTURER,OUTPUT_MIN_QTY,FIRST_FINANCE_MATERIAL_TYPE,SECOND_FINANCE_MATERIAL_TYPE,MATERIAL_FIRST_CLASS,MATERIAL_SECOND_CLASS,MATERIAL_CLASS_NUMBER,FINANCE_SUBJECT
	</sql>

	<!-- 单条新增 -->
	<insert id="insert" useGeneratedKeys="true"   keyProperty="rowId" parameterType="MaterialModel">
		INSERT INTO CD_M_MATERIAL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			SORT_NBR,
			STATUS,
			DELETED_FLAG,
			ORIGIN_FLAG,
			ORIGIN_APP,
			NOTES,
			FARM_ID,
			COMPANY_ID,
			RELATED_ID,
			GROUP_ID,
			BUSINESS_CODE,
			MATERIAL_NAME,
			MATERIAL_TYPE,
			MATERIAL_SOURCE,
			UNIT,
			IS_WAREHOUSE,
			IS_PURCHASE,
			IS_SELL,
			DEFAULT_WAREHOUSE,
			PRICE,
			CAN_LOSE_STOCK,
			CAN_PURCHASE_RETURN,
			CAN_SCRAP,
			SPEC,
			SPEC_NUM,
			SPEC_ALL,
			SAFE_STOCK,
			STOCK_SUBJECT_ID,
			COST_ACC_SUBJECT_ID,
			SALES_SUBJECT_ID,
			RMVALUERATE,
			FREE_PERCENT,
			SUPPLIER_ID,
			MANUFACTURER,
			OUTPUT_MIN_QTY,
			FIRST_FINANCE_MATERIAL_TYPE,
			SECOND_FINANCE_MATERIAL_TYPE,
			MATERIAL_FIRST_CLASS,
			MATERIAL_SECOND_CLASS,
			MATERIAL_CLASS_NUMBER,
			FINANCE_SUBJECT
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{ sortNbr,jdbcType=INTEGER},
			#{ status,jdbcType=CHAR},
			#{ deletedFlag,jdbcType=CHAR},
			#{ originFlag,jdbcType=CHAR},
			#{ originApp,jdbcType=VARCHAR},
			#{ notes,jdbcType=VARCHAR},
			#{ farmId,jdbcType=INTEGER},
			#{ companyId,jdbcType=INTEGER},
			#{ relatedId,jdbcType=INTEGER},
			#{ groupId,jdbcType=INTEGER},
			#{ businessCode,jdbcType=VARCHAR},
			#{ materialName,jdbcType=VARCHAR},
			#{ materialType,jdbcType=VARCHAR},
			#{ materialSource,jdbcType=VARCHAR},
			#{ unit,jdbcType=VARCHAR},
			#{ isWarehouse,jdbcType=CHAR},
			#{ isPurchase,jdbcType=CHAR},
			#{ isSell,jdbcType=CHAR},
			#{ defaultWarehouse,jdbcType=INTEGER},
			#{ price,jdbcType=DECIMAL},
			#{ canLoseStock,jdbcType=VARCHAR},
			#{ canPurchaseReturn,jdbcType=VARCHAR},
			#{ canScrap,jdbcType=VARCHAR},
			#{ spec,jdbcType=VARCHAR},
			#{ specNum,jdbcType=DECIMAL},
			#{ specAll,jdbcType=VARCHAR},
			#{ safeStock,jdbcType=DECIMAL},
			#{ stockSubjectId,jdbcType=INTEGER},
			#{ costAccSubjectId,jdbcType=INTEGER},
			#{ salesSubjectId,jdbcType=INTEGER},
			#{ rmvaluerate,jdbcType=DECIMAL},
			#{ freePercent,jdbcType=VARCHAR},
			#{ supplierId,jdbcType=INTEGER},
			#{ manufacturer,jdbcType=VARCHAR},
			#{ outputMinQty,jdbcType=DECIMAL},
			#{ firstFinanceMaterialType,jdbcType=VARCHAR},
			#{ secondFinanceMaterialType,jdbcType=VARCHAR},
			#{ materialFirstClass,jdbcType=CHAR},
			#{ materialSecondClass,jdbcType=CHAR},
			#{ materialClassNumber,jdbcType=CHAR},
			#{ financeSubject,jdbcType=CHAR}
		</trim>
	</insert>
	
	<!-- 批量新增 -->
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO CD_M_MATERIAL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			SORT_NBR ,
			STATUS ,
			DELETED_FLAG ,
			ORIGIN_FLAG ,
			ORIGIN_APP ,
			NOTES ,
			FARM_ID ,
			COMPANY_ID ,
			RELATED_ID ,
			GROUP_ID ,
			BUSINESS_CODE ,
			MATERIAL_NAME ,
			MATERIAL_TYPE ,
			MATERIAL_SOURCE ,
			UNIT ,
			IS_WAREHOUSE ,
			IS_PURCHASE ,
			IS_SELL ,
			DEFAULT_WAREHOUSE ,
			PRICE ,
			CAN_LOSE_STOCK ,
			CAN_PURCHASE_RETURN ,
			CAN_SCRAP ,
			SPEC ,
			SPEC_NUM ,
			SPEC_ALL ,
			SAFE_STOCK ,
			STOCK_SUBJECT_ID ,
			COST_ACC_SUBJECT_ID ,
			SALES_SUBJECT_ID ,
			RMVALUERATE ,
			FREE_PERCENT ,
			SUPPLIER_ID ,
			MANUFACTURER ,
			OUTPUT_MIN_QTY ,
			FIRST_FINANCE_MATERIAL_TYPE ,
			SECOND_FINANCE_MATERIAL_TYPE ,
			MATERIAL_FIRST_CLASS ,
			MATERIAL_SECOND_CLASS ,
			MATERIAL_CLASS_NUMBER ,
			FINANCE_SUBJECT 
		</trim>
		VALUES
		<foreach collection="records" item="item" index="index"  separator="," >	
			<trim prefix="(" suffix=")" suffixOverrides=",">		
				#{item.sortNbr,jdbcType=INTEGER},
				#{item.status,jdbcType=CHAR},
				#{item.deletedFlag,jdbcType=CHAR},
				#{item.originFlag,jdbcType=CHAR},
				#{item.originApp,jdbcType=VARCHAR},
				#{item.notes,jdbcType=VARCHAR},
				#{item.farmId,jdbcType=INTEGER},
				#{item.companyId,jdbcType=INTEGER},
				#{item.relatedId,jdbcType=INTEGER},
				#{item.groupId,jdbcType=INTEGER},
				#{item.businessCode,jdbcType=VARCHAR},
				#{item.materialName,jdbcType=VARCHAR},
				#{item.materialType,jdbcType=VARCHAR},
				#{item.materialSource,jdbcType=VARCHAR},
				#{item.unit,jdbcType=VARCHAR},
				#{item.isWarehouse,jdbcType=CHAR},
				#{item.isPurchase,jdbcType=CHAR},
				#{item.isSell,jdbcType=CHAR},
				#{item.defaultWarehouse,jdbcType=INTEGER},
				#{item.price,jdbcType=DECIMAL},
				#{item.canLoseStock,jdbcType=VARCHAR},
				#{item.canPurchaseReturn,jdbcType=VARCHAR},
				#{item.canScrap,jdbcType=VARCHAR},
				#{item.spec,jdbcType=VARCHAR},
				#{item.specNum,jdbcType=DECIMAL},
				#{item.specAll,jdbcType=VARCHAR},
				#{item.safeStock,jdbcType=DECIMAL},
				#{item.stockSubjectId,jdbcType=INTEGER},
				#{item.costAccSubjectId,jdbcType=INTEGER},
				#{item.salesSubjectId,jdbcType=INTEGER},
				#{item.rmvaluerate,jdbcType=DECIMAL},
				#{item.freePercent,jdbcType=VARCHAR},
				#{item.supplierId,jdbcType=INTEGER},
				#{item.manufacturer,jdbcType=VARCHAR},
				#{item.outputMinQty,jdbcType=DECIMAL},
				#{item.firstFinanceMaterialType,jdbcType=VARCHAR},
				#{item.secondFinanceMaterialType,jdbcType=VARCHAR},
				#{item.materialFirstClass,jdbcType=CHAR},
				#{item.materialSecondClass,jdbcType=CHAR},
				#{item.materialClassNumber,jdbcType=CHAR},
				#{item.financeSubject,jdbcType=CHAR}
			</trim>
		</foreach>			
	</insert>
	
	<!--单条更新 -->
	<update id="update" parameterType="MaterialModel" >
		UPDATE CD_M_MATERIAL 
		<set>
		<if test="sortNbr != null">SORT_NBR = #{ sortNbr,jdbcType=INTEGER},</if>
		<if test="status != null">STATUS = #{ status,jdbcType=CHAR},</if>
		<if test="originFlag != null">ORIGIN_FLAG = #{ originFlag,jdbcType=CHAR},</if>
		<if test="originApp != null">ORIGIN_APP = #{ originApp,jdbcType=VARCHAR},</if>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		<if test="relatedId != null">RELATED_ID = #{ relatedId,jdbcType=INTEGER},</if>
		<if test="groupId != null">GROUP_ID = #{ groupId,jdbcType=INTEGER},</if>
		<if test="businessCode != null">BUSINESS_CODE = #{ businessCode,jdbcType=VARCHAR},</if>
		<if test="materialName != null">MATERIAL_NAME = #{ materialName,jdbcType=VARCHAR},</if>
		<if test="materialType != null">MATERIAL_TYPE = #{ materialType,jdbcType=VARCHAR},</if>
		<if test="materialSource != null">MATERIAL_SOURCE = #{ materialSource,jdbcType=VARCHAR},</if>
		<if test="unit != null">UNIT = #{ unit,jdbcType=VARCHAR},</if>
		<if test="isWarehouse != null">IS_WAREHOUSE = #{ isWarehouse,jdbcType=CHAR},</if>
		<if test="isPurchase != null">IS_PURCHASE = #{ isPurchase,jdbcType=CHAR},</if>
		<if test="isSell != null">IS_SELL = #{ isSell,jdbcType=CHAR},</if>
		<if test="defaultWarehouse != null">DEFAULT_WAREHOUSE = #{ defaultWarehouse,jdbcType=INTEGER},</if>
		<if test="price != null">PRICE = #{ price,jdbcType=DECIMAL},</if>
		<if test="canLoseStock != null">CAN_LOSE_STOCK = #{ canLoseStock,jdbcType=VARCHAR},</if>
		<if test="canPurchaseReturn != null">CAN_PURCHASE_RETURN = #{ canPurchaseReturn,jdbcType=VARCHAR},</if>
		<if test="canScrap != null">CAN_SCRAP = #{ canScrap,jdbcType=VARCHAR},</if>
		<if test="spec != null">SPEC = #{ spec,jdbcType=VARCHAR},</if>
		<if test="specNum != null">SPEC_NUM = #{ specNum,jdbcType=DECIMAL},</if>
		<if test="specAll != null">SPEC_ALL = #{ specAll,jdbcType=VARCHAR},</if>
		<if test="safeStock != null">SAFE_STOCK = #{ safeStock,jdbcType=DECIMAL},</if>
		<if test="stockSubjectId != null">STOCK_SUBJECT_ID = #{ stockSubjectId,jdbcType=INTEGER},</if>
		<if test="costAccSubjectId != null">COST_ACC_SUBJECT_ID = #{ costAccSubjectId,jdbcType=INTEGER},</if>
		<if test="salesSubjectId != null">SALES_SUBJECT_ID = #{ salesSubjectId,jdbcType=INTEGER},</if>
		<if test="rmvaluerate != null">RMVALUERATE = #{ rmvaluerate,jdbcType=DECIMAL},</if>
		<if test="freePercent != null">FREE_PERCENT = #{ freePercent,jdbcType=VARCHAR},</if>
		<if test="supplierId != null">SUPPLIER_ID = #{ supplierId,jdbcType=INTEGER},</if>
		<if test="manufacturer != null">MANUFACTURER = #{ manufacturer,jdbcType=VARCHAR},</if>
		<if test="outputMinQty != null">OUTPUT_MIN_QTY = #{ outputMinQty,jdbcType=DECIMAL},</if>
		<if test="firstFinanceMaterialType != null">FIRST_FINANCE_MATERIAL_TYPE = #{ firstFinanceMaterialType,jdbcType=VARCHAR},</if>
		<if test="secondFinanceMaterialType != null">SECOND_FINANCE_MATERIAL_TYPE = #{ secondFinanceMaterialType,jdbcType=VARCHAR},</if>
		<if test="materialFirstClass != null">MATERIAL_FIRST_CLASS = #{ materialFirstClass,jdbcType=CHAR},</if>
		<if test="materialSecondClass != null">MATERIAL_SECOND_CLASS = #{ materialSecondClass,jdbcType=CHAR},</if>
		<if test="materialClassNumber != null">MATERIAL_CLASS_NUMBER = #{ materialClassNumber,jdbcType=CHAR},</if>
		<if test="financeSubject != null">FINANCE_SUBJECT = #{ financeSubject,jdbcType=CHAR}</if>
		</set>
		WHERE
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量更新 -->
	<update id="updates" parameterType="java.util.List">
		<foreach collection="records" item="item" index="index" open="" close="" separator=";">	
			UPDATE CD_M_MATERIAL 
			<set>
			<if test="item.sortNbr != null">SORT_NBR = #{item.sortNbr,jdbcType=INTEGER},</if>
			<if test="item.status != null">STATUS = #{item.status,jdbcType=CHAR},</if>
			<if test="item.originFlag != null">ORIGIN_FLAG = #{item.originFlag,jdbcType=CHAR},</if>
			<if test="item.originApp != null">ORIGIN_APP = #{item.originApp,jdbcType=VARCHAR},</if>
			<if test="item.notes != null">NOTES = #{item.notes,jdbcType=VARCHAR},</if>
			<if test="item.relatedId != null">RELATED_ID = #{item.relatedId,jdbcType=INTEGER},</if>
			<if test="item.groupId != null">GROUP_ID = #{item.groupId,jdbcType=INTEGER},</if>
			<if test="item.businessCode != null">BUSINESS_CODE = #{item.businessCode,jdbcType=VARCHAR},</if>
			<if test="item.materialName != null">MATERIAL_NAME = #{item.materialName,jdbcType=VARCHAR},</if>
			<if test="item.materialType != null">MATERIAL_TYPE = #{item.materialType,jdbcType=VARCHAR},</if>
			<if test="item.materialSource != null">MATERIAL_SOURCE = #{item.materialSource,jdbcType=VARCHAR},</if>
			<if test="item.unit != null">UNIT = #{item.unit,jdbcType=VARCHAR},</if>
			<if test="item.isWarehouse != null">IS_WAREHOUSE = #{item.isWarehouse,jdbcType=CHAR},</if>
			<if test="item.isPurchase != null">IS_PURCHASE = #{item.isPurchase,jdbcType=CHAR},</if>
			<if test="item.isSell != null">IS_SELL = #{item.isSell,jdbcType=CHAR},</if>
			<if test="item.defaultWarehouse != null">DEFAULT_WAREHOUSE = #{item.defaultWarehouse,jdbcType=INTEGER},</if>
			<if test="item.price != null">PRICE = #{item.price,jdbcType=DECIMAL},</if>
			<if test="item.canLoseStock != null">CAN_LOSE_STOCK = #{item.canLoseStock,jdbcType=VARCHAR},</if>
			<if test="item.canPurchaseReturn != null">CAN_PURCHASE_RETURN = #{item.canPurchaseReturn,jdbcType=VARCHAR},</if>
			<if test="item.canScrap != null">CAN_SCRAP = #{item.canScrap,jdbcType=VARCHAR},</if>
			<if test="item.spec != null">SPEC = #{item.spec,jdbcType=VARCHAR},</if>
			<if test="item.specNum != null">SPEC_NUM = #{item.specNum,jdbcType=DECIMAL},</if>
			<if test="item.specAll != null">SPEC_ALL = #{item.specAll,jdbcType=VARCHAR},</if>
			<if test="item.safeStock != null">SAFE_STOCK = #{item.safeStock,jdbcType=DECIMAL},</if>
			<if test="item.stockSubjectId != null">STOCK_SUBJECT_ID = #{item.stockSubjectId,jdbcType=INTEGER},</if>
			<if test="item.costAccSubjectId != null">COST_ACC_SUBJECT_ID = #{item.costAccSubjectId,jdbcType=INTEGER},</if>
			<if test="item.salesSubjectId != null">SALES_SUBJECT_ID = #{item.salesSubjectId,jdbcType=INTEGER},</if>
			<if test="item.rmvaluerate != null">RMVALUERATE = #{item.rmvaluerate,jdbcType=DECIMAL},</if>
			<if test="item.freePercent != null">FREE_PERCENT = #{item.freePercent,jdbcType=VARCHAR},</if>
			<if test="item.supplierId != null">SUPPLIER_ID = #{item.supplierId,jdbcType=INTEGER},</if>
			<if test="item.manufacturer != null">MANUFACTURER = #{item.manufacturer,jdbcType=VARCHAR},</if>
			<if test="item.outputMinQty != null">OUTPUT_MIN_QTY = #{item.outputMinQty,jdbcType=DECIMAL},</if>
			<if test="item.firstFinanceMaterialType != null">FIRST_FINANCE_MATERIAL_TYPE = #{item.firstFinanceMaterialType,jdbcType=VARCHAR},</if>
			<if test="item.secondFinanceMaterialType != null">SECOND_FINANCE_MATERIAL_TYPE = #{item.secondFinanceMaterialType,jdbcType=VARCHAR},</if>
			<if test="item.materialFirstClass != null">MATERIAL_FIRST_CLASS = #{item.materialFirstClass,jdbcType=CHAR},</if>
			<if test="item.materialSecondClass != null">MATERIAL_SECOND_CLASS = #{item.materialSecondClass,jdbcType=CHAR},</if>
			<if test="item.materialClassNumber != null">MATERIAL_CLASS_NUMBER = #{item.materialClassNumber,jdbcType=CHAR},</if>
			<if test="item.financeSubject != null">FINANCE_SUBJECT = #{item.financeSubject,jdbcType=CHAR}</if>
			</set>
			WHERE
			ROW_ID = #{item.rowId,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<!--单条删除 -->
	<update id="delete" >
		UPDATE  CD_M_MATERIAL
		SET
		DELETED_FLAG =  '1'
		WHERE 
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量删除 -->
	<update id="deletes" >
		<foreach item="item" index="index" collection="ids" open=""  close="" separator=";">
		 UPDATE  CD_M_MATERIAL
		 SET
		 DELETED_FLAG  =  '1'  WHERE 
		 ROW_ID =#{item}
        </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCon" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  CD_M_MATERIAL
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' 
		 AND FARM_ID=#{ farmId,jdbcType=INTEGER}
		 AND ${item.RECORD_CON} = #{item.RECORD_VALUES}
		 </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCons" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  CD_M_MATERIAL
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' ${item}
		</foreach>	
	</update>
	
	<!--查询List记录 -->
	<select id="searchToList" resultMap="MaterialResult">
		SELECT 
		<include refid="MaterialModel_Column_List" />
		FROM CD_M_MATERIAL WHERE DELETED_FLAG='0' 
		AND FARM_ID=#{ farmId,jdbcType=INTEGER}
	</select>
	
	<!--查询根据主键查单条记录 -->
	<select id="searchById" resultMap="MaterialResult" >
		SELECT 
		<include refid="MaterialModel_Column_List" />
		FROM CD_M_MATERIAL WHERE DELETED_FLAG='0'  AND
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</select>
	
	<!--根据条件查询有效数据 --><!-- {condition} -->
	<select id="searchListByCon" resultMap="MaterialResult" >
		SELECT 
		<include refid="MaterialModel_Column_List" />
		FROM CD_M_MATERIAL
		WHERE DELETED_FLAG='0'  ${condition} 
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAllListByCon" resultMap="MaterialResult" >
		SELECT 
		<include refid="MaterialModel_Column_List" />
		FROM CD_M_MATERIAL
		WHERE ${condition}
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAll" resultMap="MaterialResult" >
		SELECT *
		FROM CD_M_MATERIAL
		WHERE ${condition}
	</select>
	
	<!-- 直接sql操作 -->
	<select id="operSql" resultMap="MaterialResult"> ${sql} </select>
	
	<!--供应链管理批量更新到所有猪场 -->
	<update id="updateToFarms" parameterType="MaterialModel" >
		UPDATE CD_M_MATERIAL 
		<set>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		GROUP_ID = #{ groupId,jdbcType=INTEGER},
		<if test="materialName != null">MATERIAL_NAME = #{ materialName,jdbcType=VARCHAR},</if>
		<if test="unit != null">UNIT = #{ unit,jdbcType=VARCHAR},</if>
		<if test="spec != null">SPEC = #{ spec,jdbcType=VARCHAR},</if>
		<if test="specNum != null">SPEC_NUM = #{ specNum,jdbcType=DECIMAL},</if>
		<if test="specAll != null">SPEC_ALL = #{ specAll,jdbcType=VARCHAR},</if>
		<if test="outputMinQty != null">OUTPUT_MIN_QTY = #{ outputMinQty,jdbcType=DECIMAL},</if>
		<if test="supplierId != null">SUPPLIER_ID = #{ supplierId,jdbcType=INTEGER},</if>
		<if test="manufacturer != null">MANUFACTURER = #{ manufacturer,jdbcType=VARCHAR},</if>
<!-- 		<if test="firstFinanceMaterialType != null">FIRST_FINANCE_MATERIAL_TYPE = #{ firstFinanceMaterialType,jdbcType=VARCHAR},</if> -->
<!-- 		<if test="secondFinanceMaterialType != null">SECOND_FINANCE_MATERIAL_TYPE = #{ secondFinanceMaterialType,jdbcType=VARCHAR}</if> -->
		<if test="materialFirstClass != null">MATERIAL_FIRST_CLASS = #{ materialFirstClass,jdbcType=VARCHAR},</if>
		<if test="materialSecondClass != null">MATERIAL_SECOND_CLASS = #{ materialSecondClass,jdbcType=VARCHAR},</if>
		<if test="materialClassNumber != null">MATERIAL_CLASS_NUMBER = #{ materialClassNumber,jdbcType=VARCHAR},</if>
		<if test="financeSubject != null">FINANCE_SUBJECT = #{ financeSubject,jdbcType=VARCHAR}</if>

		</set>
		WHERE
		RELATED_ID = #{ relatedId,jdbcType=INTEGER}
	</update>
	
</mapper>

