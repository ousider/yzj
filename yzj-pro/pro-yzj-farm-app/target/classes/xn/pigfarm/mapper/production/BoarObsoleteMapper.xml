<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="xn.pigfarm.mapper.production.BoarObsoleteMapper">

	<resultMap id="BoarObsoleteResult"  type="BoarObsoleteModel" >
		<result property="rowId" column="ROW_ID" jdbcType="INTEGER" />
		<result property="notes" column="NOTES" jdbcType="VARCHAR" />
		<result property="status" column="STATUS" jdbcType="CHAR" />
		<result property="deletedFlag" column="DELETED_FLAG" jdbcType="CHAR" />
		<result property="farmId" column="FARM_ID" jdbcType="INTEGER" />
		<result property="companyId" column="COMPANY_ID" jdbcType="INTEGER" />
		<result property="lineNumber" column="LINE_NUMBER" jdbcType="INTEGER" />
		<result property="pigId" column="PIG_ID" jdbcType="INTEGER" />
		<result property="billId" column="BILL_ID" jdbcType="INTEGER" />
		<result property="obsoleteReason" column="OBSOLETE_REASON" jdbcType="VARCHAR" />
		<result property="obsoleteDate" column="OBSOLETE_DATE" jdbcType="DATE" />
		<result property="worker" column="WORKER" jdbcType="INTEGER" />
		<result property="createId" column="CREATE_ID" jdbcType="INTEGER" />
		<result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP" />
		<result property="auditDate" column="AUDIT_DATE" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="BoarObsoleteModel_Column_List">
		ROW_ID,NOTES,LINE_NUMBER,PIG_ID,BILL_ID,OBSOLETE_REASON,OBSOLETE_DATE,WORKER,CREATE_ID,CREATE_DATE,AUDIT_DATE
	</sql>

	<!-- 单条新增 -->
	<insert id="insert" useGeneratedKeys="true"   keyProperty="rowId" parameterType="BoarObsoleteModel">
		INSERT INTO PP_L_BILL_BOAR_OBSOLETE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			NOTES,
			STATUS,
			DELETED_FLAG,
			FARM_ID,
			COMPANY_ID,
			LINE_NUMBER,
			PIG_ID,
			BILL_ID,
			OBSOLETE_REASON,
			OBSOLETE_DATE,
			WORKER,
			CREATE_ID,
			CREATE_DATE,
			AUDIT_DATE
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{ notes,jdbcType=VARCHAR},
			#{ status,jdbcType=CHAR},
			#{ deletedFlag,jdbcType=CHAR},
			#{ farmId,jdbcType=INTEGER},
			#{ companyId,jdbcType=INTEGER},
			#{ lineNumber,jdbcType=INTEGER},
			#{ pigId,jdbcType=INTEGER},
			#{ billId,jdbcType=INTEGER},
			#{ obsoleteReason,jdbcType=VARCHAR},
			#{ obsoleteDate,jdbcType=DATE},
			#{ worker,jdbcType=INTEGER},
			#{ createId,jdbcType=INTEGER},
			#{ createDate,jdbcType=TIMESTAMP},
			#{ auditDate,jdbcType=TIMESTAMP}
		</trim>
	</insert>
	
	<!-- 批量新增 -->
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO PP_L_BILL_BOAR_OBSOLETE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			NOTES ,
			STATUS ,
			DELETED_FLAG ,
			FARM_ID ,
			COMPANY_ID ,
			LINE_NUMBER ,
			PIG_ID ,
			BILL_ID ,
			OBSOLETE_REASON ,
			OBSOLETE_DATE ,
			WORKER ,
			CREATE_ID ,
			CREATE_DATE ,
			AUDIT_DATE 
		</trim>
		VALUES
		<foreach collection="records" item="item" index="index"  separator="," >	
			<trim prefix="(" suffix=")" suffixOverrides=",">		
				#{item.notes,jdbcType=VARCHAR},
				#{item.status,jdbcType=CHAR},
				#{item.deletedFlag,jdbcType=CHAR},
				#{item.farmId,jdbcType=INTEGER},
				#{item.companyId,jdbcType=INTEGER},
				#{item.lineNumber,jdbcType=INTEGER},
				#{item.pigId,jdbcType=INTEGER},
				#{item.billId,jdbcType=INTEGER},
				#{item.obsoleteReason,jdbcType=VARCHAR},
				#{item.obsoleteDate,jdbcType=DATE},
				#{item.worker,jdbcType=INTEGER},
				#{item.createId,jdbcType=INTEGER},
				#{item.createDate,jdbcType=TIMESTAMP},
				#{item.auditDate,jdbcType=TIMESTAMP}
			</trim>
		</foreach>			
	</insert>
	
	<!--单条更新 -->
	<update id="update" parameterType="BoarObsoleteModel" >
		UPDATE PP_L_BILL_BOAR_OBSOLETE 
		<set>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		<if test="status != null">STATUS = #{ status,jdbcType=CHAR},</if>
		<if test="lineNumber != null">LINE_NUMBER = #{ lineNumber,jdbcType=INTEGER},</if>
		<if test="pigId != null">PIG_ID = #{ pigId,jdbcType=INTEGER},</if>
		<if test="billId != null">BILL_ID = #{ billId,jdbcType=INTEGER},</if>
		<if test="obsoleteReason != null">OBSOLETE_REASON = #{ obsoleteReason,jdbcType=VARCHAR},</if>
		<if test="obsoleteDate != null">OBSOLETE_DATE = #{ obsoleteDate,jdbcType=DATE},</if>
		<if test="worker != null">WORKER = #{ worker,jdbcType=INTEGER},</if>
		<if test="createId != null">CREATE_ID = #{ createId,jdbcType=INTEGER},</if>
		<if test="createDate != null">CREATE_DATE = #{ createDate,jdbcType=TIMESTAMP},</if>
		<if test="auditDate != null">AUDIT_DATE = #{ auditDate,jdbcType=TIMESTAMP}</if>
		</set>
		WHERE
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量更新 -->
	<update id="updates" parameterType="java.util.List">
		<foreach collection="records" item="item" index="index" open="" close="" separator=";">	
			UPDATE PP_L_BILL_BOAR_OBSOLETE 
			<set>
			<if test="item.notes != null">NOTES = #{item.notes,jdbcType=VARCHAR},</if>
			<if test="item.status != null">STATUS = #{item.status,jdbcType=CHAR},</if>
			<if test="item.lineNumber != null">LINE_NUMBER = #{item.lineNumber,jdbcType=INTEGER},</if>
			<if test="item.pigId != null">PIG_ID = #{item.pigId,jdbcType=INTEGER},</if>
			<if test="item.billId != null">BILL_ID = #{item.billId,jdbcType=INTEGER},</if>
			<if test="item.obsoleteReason != null">OBSOLETE_REASON = #{item.obsoleteReason,jdbcType=VARCHAR},</if>
			<if test="item.obsoleteDate != null">OBSOLETE_DATE = #{item.obsoleteDate,jdbcType=DATE},</if>
			<if test="item.worker != null">WORKER = #{item.worker,jdbcType=INTEGER},</if>
			<if test="item.createId != null">CREATE_ID = #{item.createId,jdbcType=INTEGER},</if>
			<if test="item.createDate != null">CREATE_DATE = #{item.createDate,jdbcType=TIMESTAMP},</if>
			<if test="item.auditDate != null">AUDIT_DATE = #{item.auditDate,jdbcType=TIMESTAMP}</if>
			</set>
			WHERE
			ROW_ID = #{item.rowId,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<!--单条删除 -->
	<update id="delete" >
		UPDATE  PP_L_BILL_BOAR_OBSOLETE
		SET
		DELETED_FLAG =  '1'
		WHERE 
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量删除 -->
	<update id="deletes" >
		<foreach item="item" index="index" collection="ids" open=""  close="" separator=";">
		 UPDATE  PP_L_BILL_BOAR_OBSOLETE
		 SET
		 DELETED_FLAG  =  '1'  WHERE 
		 ROW_ID =#{item}
        </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCon" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  PP_L_BILL_BOAR_OBSOLETE
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' 
		 AND FARM_ID=#{ farmId,jdbcType=INTEGER}
		 AND ${item.RECORD_CON} = #{item.RECORD_VALUES}
		 </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCons" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  PP_L_BILL_BOAR_OBSOLETE
		 SET
		 DELETED_FLAG  =  '1'  WHERE DELETED_FLAG  =  '0' ${item}
		</foreach>	
	</update>
	
	<!--查询List记录 -->
	<select id="searchToList" resultMap="BoarObsoleteResult">
		SELECT 
		<include refid="BoarObsoleteModel_Column_List" />
		FROM PP_L_BILL_BOAR_OBSOLETE WHERE DELETED_FLAG='0' 
		AND FARM_ID=#{ farmId,jdbcType=INTEGER}
	</select>
	
	<!--查询根据主键查单条记录 -->
	<select id="searchById" resultMap="BoarObsoleteResult" >
		SELECT 
		<include refid="BoarObsoleteModel_Column_List" />
		FROM PP_L_BILL_BOAR_OBSOLETE WHERE DELETED_FLAG='0'  AND
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</select>
	
	<!--根据条件查询有效数据 --><!-- {condition} -->
	<select id="searchListByCon" resultMap="BoarObsoleteResult" >
		SELECT 
		<include refid="BoarObsoleteModel_Column_List" />
		FROM PP_L_BILL_BOAR_OBSOLETE
		WHERE DELETED_FLAG='0'  ${condition} 
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAllListByCon" resultMap="BoarObsoleteResult" >
		SELECT 
		<include refid="BoarObsoleteModel_Column_List" />
		FROM PP_L_BILL_BOAR_OBSOLETE
		WHERE ${condition}
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAll" resultMap="BoarObsoleteResult" >
		SELECT *
		FROM PP_L_BILL_BOAR_OBSOLETE
		WHERE ${condition}
	</select>
	
	<!-- 直接sql操作 -->
	<select id="operSql" resultMap="BoarObsoleteResult"> ${sql} </select>

</mapper>

