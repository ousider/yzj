<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="xn.pigfarm.mapper.production.PigEventHisMapper">

	<resultMap id="PigEventHisResult"  type="PigEventHisModel" >
		<result property="rowId" column="ROW_ID" jdbcType="INTEGER" />
		<result property="notes" column="NOTES" jdbcType="VARCHAR" />
		<result property="sortNbr" column="SORT_NBR" jdbcType="INTEGER" />
		<result property="status" column="STATUS" jdbcType="CHAR" />
		<result property="deletedFlag" column="DELETED_FLAG" jdbcType="CHAR" />
		<result property="originFlag" column="ORIGIN_FLAG" jdbcType="CHAR" />
		<result property="originApp" column="ORIGIN_APP" jdbcType="VARCHAR" />
		<result property="companyId" column="COMPANY_ID" jdbcType="INTEGER" />
		<result property="farmId" column="FARM_ID" jdbcType="INTEGER" />
		<result property="lineId" column="LINE_ID" jdbcType="INTEGER" />
		<result property="swineryId" column="SWINERY_ID" jdbcType="INTEGER" />
		<result property="houseId" column="HOUSE_ID" jdbcType="INTEGER" />
		<result property="pigpenId" column="PIGPEN_ID" jdbcType="INTEGER" />
		<result property="pigId" column="PIG_ID" jdbcType="INTEGER" />
		<result property="earBrand" column="EAR_BRAND" jdbcType="VARCHAR" />
		<result property="pigType" column="PIG_TYPE" jdbcType="VARCHAR" />
		<result property="sex" column="SEX" jdbcType="VARCHAR" />
		<result property="pigClass" column="PIG_CLASS" jdbcType="INTEGER" />
		<result property="parity" column="PARITY" jdbcType="INTEGER" />
		<result property="enterDate" column="ENTER_DATE" jdbcType="DATE" />
		<result property="worker" column="WORKER" jdbcType="INTEGER" />
		<result property="billId" column="BILL_ID" jdbcType="INTEGER" />
		<result property="lastEventDate" column="LAST_EVENT_DATE" jdbcType="TIMESTAMP" />
		<result property="eventName" column="EVENT_NAME" jdbcType="VARCHAR" />
		<result property="eventNotes" column="EVENT_NOTES" jdbcType="VARCHAR" />
		<result property="tableName" column="TABLE_NAME" jdbcType="VARCHAR" />
		<result property="tableRowId" column="TABLE_ROW_ID" jdbcType="INTEGER" />
		<result property="createId" column="CREATE_ID" jdbcType="INTEGER" />
		<result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="PigEventHisModel_Column_List">
		ROW_ID,NOTES,SORT_NBR,STATUS,DELETED_FLAG,ORIGIN_FLAG,ORIGIN_APP,COMPANY_ID,FARM_ID,LINE_ID,SWINERY_ID,HOUSE_ID,PIGPEN_ID,PIG_ID,EAR_BRAND,PIG_TYPE,SEX,PIG_CLASS,PARITY,ENTER_DATE,WORKER,BILL_ID,LAST_EVENT_DATE,EVENT_NAME,EVENT_NOTES,TABLE_NAME,TABLE_ROW_ID,CREATE_ID,CREATE_DATE
	</sql>

	<!-- 单条新增 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="rowId" parameterType="PigEventHisModel">
		INSERT INTO PP_L_PIG_EVENT_HIS
		<trim prefix="(" suffix=")" suffixOverrides=",">
			NOTES,
			SORT_NBR,
			STATUS,
			DELETED_FLAG,
			ORIGIN_FLAG,
			ORIGIN_APP,
			COMPANY_ID,
			FARM_ID,
			LINE_ID,
			SWINERY_ID,
			HOUSE_ID,
			PIGPEN_ID,
			PIG_ID,
			EAR_BRAND,
			PIG_TYPE,
			SEX,
			PIG_CLASS,
			PARITY,
			ENTER_DATE,
			WORKER,
			BILL_ID,
			LAST_EVENT_DATE,
			EVENT_NAME,
			EVENT_NOTES,
			TABLE_NAME,
			TABLE_ROW_ID,
			CREATE_ID,
			CREATE_DATE
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{ notes,jdbcType=VARCHAR},
			#{ sortNbr,jdbcType=INTEGER},
			#{ status,jdbcType=CHAR},
			#{ deletedFlag,jdbcType=CHAR},
			#{ originFlag,jdbcType=CHAR},
			#{ originApp,jdbcType=VARCHAR},
			#{ companyId,jdbcType=INTEGER},
			#{ farmId,jdbcType=INTEGER},
			#{ lineId,jdbcType=INTEGER},
			#{ swineryId,jdbcType=INTEGER},
			#{ houseId,jdbcType=INTEGER},
			#{ pigpenId,jdbcType=INTEGER},
			#{ pigId,jdbcType=INTEGER},
			#{ earBrand,jdbcType=VARCHAR},
			#{ pigType,jdbcType=VARCHAR},
			#{ sex,jdbcType=VARCHAR},
			#{ pigClass,jdbcType=INTEGER},
			#{ parity,jdbcType=INTEGER},
			#{ enterDate,jdbcType=DATE},
			#{ worker,jdbcType=INTEGER},
			#{ billId,jdbcType=INTEGER},
			#{ lastEventDate,jdbcType=TIMESTAMP},
			#{ eventName,jdbcType=VARCHAR},
			#{ eventNotes,jdbcType=VARCHAR},
			#{ tableName,jdbcType=VARCHAR},
			#{ tableRowId,jdbcType=INTEGER},
			#{ createId,jdbcType=INTEGER},
			#{ createDate,jdbcType=TIMESTAMP}
		</trim>
	</insert>
	
	<!-- 批量新增 -->
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO PP_L_PIG_EVENT_HIS
		<trim prefix="(" suffix=")" suffixOverrides=",">
			NOTES ,
			SORT_NBR ,
			STATUS ,
			DELETED_FLAG ,
			ORIGIN_FLAG ,
			ORIGIN_APP ,
			COMPANY_ID ,
			FARM_ID ,
			LINE_ID ,
			SWINERY_ID ,
			HOUSE_ID ,
			PIGPEN_ID ,
			PIG_ID ,
			EAR_BRAND ,
			PIG_TYPE ,
			SEX ,
			PIG_CLASS ,
			PARITY ,
			ENTER_DATE ,
			WORKER ,
			BILL_ID ,
			LAST_EVENT_DATE ,
			EVENT_NAME ,
			EVENT_NOTES ,
			TABLE_NAME ,
			TABLE_ROW_ID ,
			CREATE_ID ,
			CREATE_DATE 
		</trim>
		VALUES
		<foreach collection="records" item="item" index="index"  separator="," >	
			<trim prefix="(" suffix=")" suffixOverrides=",">		
				#{item.notes,jdbcType=VARCHAR},
				#{item.sortNbr,jdbcType=INTEGER},
				#{item.status,jdbcType=CHAR},
				#{item.deletedFlag,jdbcType=CHAR},
				#{item.originFlag,jdbcType=CHAR},
				#{item.originApp,jdbcType=VARCHAR},
				#{item.companyId,jdbcType=INTEGER},
				#{item.farmId,jdbcType=INTEGER},
				#{item.lineId,jdbcType=INTEGER},
				#{item.swineryId,jdbcType=INTEGER},
				#{item.houseId,jdbcType=INTEGER},
				#{item.pigpenId,jdbcType=INTEGER},
				#{item.pigId,jdbcType=INTEGER},
				#{item.earBrand,jdbcType=VARCHAR},
				#{item.pigType,jdbcType=VARCHAR},
				#{item.sex,jdbcType=VARCHAR},
				#{item.pigClass,jdbcType=INTEGER},
				#{item.parity,jdbcType=INTEGER},
				#{item.enterDate,jdbcType=DATE},
				#{item.worker,jdbcType=INTEGER},
				#{item.billId,jdbcType=INTEGER},
				#{item.lastEventDate,jdbcType=TIMESTAMP},
				#{item.eventName,jdbcType=VARCHAR},
				#{item.eventNotes,jdbcType=VARCHAR},
				#{item.tableName,jdbcType=VARCHAR},
				#{item.tableRowId,jdbcType=INTEGER},
				#{item.createId,jdbcType=INTEGER},
				#{item.createDate,jdbcType=TIMESTAMP}
			</trim>
		</foreach>			
	</insert>
	
	<!--单条更新 -->
	<update id="update" parameterType="PigEventHisModel" >
		UPDATE PP_L_PIG_EVENT_HIS 
		<set>
		<if test="notes != null">NOTES = #{ notes,jdbcType=VARCHAR},</if>
		<if test="sortNbr != null">SORT_NBR = #{ sortNbr,jdbcType=INTEGER},</if>
		<if test="originFlag != null">ORIGIN_FLAG = #{ originFlag,jdbcType=CHAR},</if>
		<if test="originApp != null">ORIGIN_APP = #{ originApp,jdbcType=VARCHAR},</if>
		<if test="lineId != null">LINE_ID = #{ lineId,jdbcType=INTEGER},</if>
		<if test="swineryId != null">SWINERY_ID = #{ swineryId,jdbcType=INTEGER},</if>
		<if test="houseId != null">HOUSE_ID = #{ houseId,jdbcType=INTEGER},</if>
		<if test="pigpenId != null">PIGPEN_ID = #{ pigpenId,jdbcType=INTEGER},</if>
		<if test="pigId != null">PIG_ID = #{ pigId,jdbcType=INTEGER},</if>
		<if test="earBrand != null">EAR_BRAND = #{ earBrand,jdbcType=VARCHAR},</if>
		<if test="pigType != null">PIG_TYPE = #{ pigType,jdbcType=VARCHAR},</if>
		<if test="sex != null">SEX = #{ sex,jdbcType=VARCHAR},</if>
		<if test="pigClass != null">PIG_CLASS = #{ pigClass,jdbcType=INTEGER},</if>
		<if test="parity != null">PARITY = #{ parity,jdbcType=INTEGER},</if>
		<if test="enterDate != null">ENTER_DATE = #{ enterDate,jdbcType=DATE},</if>
		<if test="worker != null">WORKER = #{ worker,jdbcType=INTEGER},</if>
		<if test="billId != null">BILL_ID = #{ billId,jdbcType=INTEGER},</if>
		<if test="lastEventDate != null">LAST_EVENT_DATE = #{ lastEventDate,jdbcType=TIMESTAMP},</if>
		<if test="eventName != null">EVENT_NAME = #{ eventName,jdbcType=VARCHAR},</if>
		<if test="eventNotes != null">EVENT_NOTES = #{ eventNotes,jdbcType=VARCHAR},</if>
		<if test="tableName != null">TABLE_NAME = #{ tableName,jdbcType=VARCHAR},</if>
		<if test="tableRowId != null">TABLE_ROW_ID = #{ tableRowId,jdbcType=INTEGER},</if>
		<if test="createId != null">CREATE_ID = #{ createId,jdbcType=INTEGER},</if>
		<if test="createDate != null">CREATE_DATE = #{ createDate,jdbcType=TIMESTAMP}</if>
		</set>
		WHERE
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量更新 -->
	<update id="updates" parameterType="java.util.List">
		<foreach collection="records" item="item" index="index" open="" close="" separator=";">	
			UPDATE PP_L_PIG_EVENT_HIS 
			<set>
			<if test="item.notes != null">NOTES = #{item.notes,jdbcType=VARCHAR},</if>
			<if test="item.sortNbr != null">SORT_NBR = #{item.sortNbr,jdbcType=INTEGER},</if>
			<if test="item.originFlag != null">ORIGIN_FLAG = #{item.originFlag,jdbcType=CHAR},</if>
			<if test="item.originApp != null">ORIGIN_APP = #{item.originApp,jdbcType=VARCHAR},</if>
			<if test="item.lineId != null">LINE_ID = #{item.lineId,jdbcType=INTEGER},</if>
			<if test="item.swineryId != null">SWINERY_ID = #{item.swineryId,jdbcType=INTEGER},</if>
			<if test="item.houseId != null">HOUSE_ID = #{item.houseId,jdbcType=INTEGER},</if>
			<if test="item.pigpenId != null">PIGPEN_ID = #{item.pigpenId,jdbcType=INTEGER},</if>
			<if test="item.pigId != null">PIG_ID = #{item.pigId,jdbcType=INTEGER},</if>
			<if test="item.earBrand != null">EAR_BRAND = #{item.earBrand,jdbcType=VARCHAR},</if>
			<if test="item.pigType != null">PIG_TYPE = #{item.pigType,jdbcType=VARCHAR},</if>
			<if test="item.sex != null">SEX = #{item.sex,jdbcType=VARCHAR},</if>
			<if test="item.pigClass != null">PIG_CLASS = #{item.pigClass,jdbcType=INTEGER},</if>
			<if test="item.parity != null">PARITY = #{item.parity,jdbcType=INTEGER},</if>
			<if test="item.enterDate != null">ENTER_DATE = #{item.enterDate,jdbcType=DATE},</if>
			<if test="item.worker != null">WORKER = #{item.worker,jdbcType=INTEGER},</if>
			<if test="item.billId != null">BILL_ID = #{item.billId,jdbcType=INTEGER},</if>
			<if test="item.lastEventDate != null">LAST_EVENT_DATE = #{item.lastEventDate,jdbcType=TIMESTAMP},</if>
			<if test="item.eventName != null">EVENT_NAME = #{item.eventName,jdbcType=VARCHAR},</if>
			<if test="item.eventNotes != null">EVENT_NOTES = #{item.eventNotes,jdbcType=VARCHAR},</if>
			<if test="item.tableName != null">TABLE_NAME = #{item.tableName,jdbcType=VARCHAR},</if>
			<if test="item.tableRowId != null">TABLE_ROW_ID = #{item.tableRowId,jdbcType=INTEGER},</if>
			<if test="item.createId != null">CREATE_ID = #{item.createId,jdbcType=INTEGER},</if>
			<if test="item.createDate != null">CREATE_DATE = #{item.createDate,jdbcType=TIMESTAMP}</if>
			</set>
			WHERE
			ROW_ID = #{item.rowId,jdbcType=INTEGER}	
		</foreach>
	</update>
	
	<!--单条删除 -->
	<update id="delete" >
		UPDATE  PP_L_PIG_EVENT_HIS
		SET
		DELETED_FLAG =  '1'
		WHERE 
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</update>
	
	<!--批量删除 -->
	<update id="deletes" >
		<foreach item="item" index="index" collection="ids" open=""  close="" separator=";">
		 UPDATE  PP_L_PIG_EVENT_HIS
		 SET
		 DELETED_FLAG  =  '1'  WHERE ROW_ID = #{item}
        </foreach>	
	</update>
	
	<!--根据条件批量删除 -->
	<update id="deletesByCon" parameterType="java.util.List" >
		<foreach item="item" index="index" collection="records" open=""  close="" separator=";">
		 UPDATE  PP_L_PIG_EVENT_HIS
		 SET
		 DELETED_FLAG  =  '1'  WHERE ${item.RECORD_CON} = #{item.RECORD_VALUES}
		 </foreach>	
	</update>
	
	<!--查询List记录 -->
	<select id="searchToList" resultMap="PigEventHisResult">
		SELECT *
		FROM PP_L_PIG_EVENT_HIS WHERE DELETED_FLAG='0' AND STATUS = '1' 
		AND FARM_ID=#{ farmId,jdbcType=INTEGER}
	</select>
	
	<!--查询根据主键查单条记录 -->
	<select id="searchById" resultMap="PigEventHisResult" >
		SELECT *
		FROM PP_L_PIG_EVENT_HIS WHERE DELETED_FLAG='0' AND STATUS = '1'  AND
		ROW_ID = #{ rowId,jdbcType=INTEGER}
	</select>
	
	<!--根据条件查询有效数据 --><!-- {condition} -->
	<select id="searchListByCon" resultMap="PigEventHisResult" >
		SELECT *
		FROM PP_L_PIG_EVENT_HIS
		WHERE DELETED_FLAG='0' AND STATUS = '1'  ${condition} 
	</select>
	
	<!--根据条件查询全部数据 --><!-- {condition} -->
	<select id="searchAllListByCon" resultMap="PigEventHisResult" >
		SELECT *
		FROM PP_L_PIG_EVENT_HIS
		WHERE ${condition}
	</select>
	
	<!-- 直接sql操作 -->
	<select id="operSql" resultMap="PigEventHisResult"> ${sql} </select>

	<insert id="pigEventHis" useGeneratedKeys="true" keyProperty="billId" parameterType="PigEventHisModel" statementType="CALLABLE">
		CALL P_PigEventHis(
			#{notes             },
			#{originFlag        },
			#{originApp         },
			#{companyId         },
			#{farmId            },
			#{lineId            },
			#{swineryId         },
			#{houseId           },
			#{pigpenId          },
			#{pigId             },
			#{earBrand          },
			#{pigType           },
			#{sex               },
			#{pigClass          },
			#{parity            },
			#{enterDate         },
			#{worker            },
			#{billId            },
			#{lastEventDate     },
			#{eventName         },
			#{eventNotes        },
			#{tableName         },
			#{tableRowId        },
			#{createId          },
			#{errorCode,mode=OUT,javaType=String,jdbcType=VARCHAR         },
			#{errorMessage ,mode=OUT,javaType=String,jdbcType=VARCHAR     }
		)
	</insert>

</mapper>

